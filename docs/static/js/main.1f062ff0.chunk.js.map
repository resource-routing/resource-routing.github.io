{"version":3,"sources":["data/branch.ts","util/color.ts","data/item.ts","data/action.ts","data/split.ts","data/compress.ts","data/storage.ts","data/delta.ts","components/Box.tsx","components/ExpandButton.tsx","store/routing/selectors.ts","components/action/ActionSummary.tsx","store/application/selectors.ts","data/limit.ts","store/routing/reducers.ts","util/layout.ts","store/application/reducers.ts","store/store.ts","store/initial.ts","store/setting/reducers.ts","store/routing/actions.ts","store/application/actions.ts","util/benchmark.ts","components/split/Split.tsx","components/split/SplitList.tsx","components/branch/Branch.tsx","components/branch/BranchList.tsx","sections/SideNav.tsx","store/setting/selectors.ts","store/setting/actions.ts","sections/Header.tsx","sections/Footer.tsx","components/action/DeltaList.tsx","components/action/ActionItem.tsx","components/action/ActionList.tsx","sections/Actions.tsx","dialog/Alert.tsx","components/item/ItemEdit.tsx","components/item/ItemDisplay.tsx","components/item/ItemList.tsx","sections/Items.tsx","data/resource.ts","data/autosave.ts","dialog/IODialog.tsx","sections/Help.tsx","App.tsx","index.tsx"],"names":["newBranch","name","expanded","splits","deflateRouteBranch","branch","map","deflateRouteSplit","inflateBranchData","inflateSplitData","compressBranch","itemNameToIndex","nameEncoded","encodeLengthPrepended","splitsEncoded","encodeArray","split","compressSplit","decompressBranch","compressedString","currentIndex","itemNames","decodeLengthPrepended","indexAfterName","nameError","decodeArray","str","idx","decompressSplit","indexAfterSplits","splitsError","linerize","c","randomColor","hex","r1","Math","floor","random","r2","g1","g2","b1","b2","getForegroundAndBackground","background","htmlColor","window","getComputedStyle","div","document","getElementById","style","color","computed","replace","i","Number","trim","htmlColorToRGB","r","g","b","shouldMakeTextWhiteForRGB","newItem","deflateRouteItem","item","inflateItemData","compressItem","colorEncoded","decompressItem","indexAfterColor","newAction","deltaString","deltaError","deltas","cloneAction","action","stringToDelta","deflateRouteAction","inflateActionData","compressAction","deltaStringEncoded","error","hasError","hasErrorEncoded","encodeBoolean","deltaToCompressedString","decompressAction","decodeBoolean","indexAfterHasError","hasErrorError","deltaStringRaw","indexAfterDeltaString","deltaStringError","compressedStringToDelta","deltaDecompressError","deltaToString","newSplit","actions","cloneSplit","actionsEncoded","indexAfterActions","actionsError","compressState","state","deflateRouteState","projectName","branches","items","projectNameEncoded","forEach","index","branchesEncoded","itemsEncoded","decompressState","compressedStateString","indexAfterProjectName","projectNameError","indexAfterItems","itemsError","indexAfterBranches","branchesError","length","data","inflateRouteData","lengthPrependedString","indexOf","len","substring","isInteger","val","array","encoder","join","decoder","element","nextIndex","push","deflateCompressedState","zlib","deflateSync","toString","inflateEncodedState","stateEncoded","inflateSync","Buffer","from","KEY","SETTING_KEY","activeBranch","activeSplit","activeAction","newEmptyRouteState","exportAsEncoded","exportAsJson","JSON","stringify","importAsEncoded","compressed","importAsJson","parse","storeToLocalStorage","settings","exportAsCompressed","localStorage","setItem","saveSettings","downloadToFile","extension","blob","Blob","type","a","createElement","fileName","download","href","URL","createObjectURL","dataset","downloadurl","display","body","appendChild","click","removeChild","setTimeout","revokeObjectURL","loadfromLocalStorage","getItem","settingsString","console","undefined","readFromFile","file","callback","reader","FileReader","onloadend","result","readAsText","deleteItemInDelta","deleteName","startsWith","value","renameItemInDelta","oldName","newName","itemToString","e","deltaObj","errors","nameEnd","op","endsWith","parseRefItem","parseValueItem","stringToItem","itemError","typeToOperator","processedValue","quantity","itemMap","itemToCompressedString","inverseItemMap","indexEnd","indexNum","ref","refIndex","refIndexNum","compressedStringToItem","num","Box","layout","children","borderClass","className","clsx","position","top","y","left","x","width","w","height","h","ExpandButton","setExpanded","onClick","getRouteState","routeState","getProjectName","getActiveBranch","getActiveSplit","getActiveRouteSplit","s","getSplit","getActiveSplitName","getActiveSplitActions","getActiveSplitActionCount","getActiveSplitAction","actionIndex","getActiveSplitActionName","isActiveSplitActionExpanded","getActiveSplitActionDeltaString","getActiveSplitActionDeltaError","getActiveSplitActionDeltas","getActiveAction","getActiveActionName","getBranches","getBranch","branchIndex","getBranchCount","getBranchName","isBranchExpanded","getSplits","splitIndex","getSplitCount","getSplitName","isSplitExpanded","getActions","getAction","getActionCount","isActionNote","getActionName","getActionDeltas","getActionDeltaString","getGlobalActionIndex","splitCount","getTotalActionCount","getItems","getItemColorByName","match","filter","getItemByName","getItemNameByIndex","getItemColorByIndex","getItemCount","mapStateToPropsForActionSummaryItemRender","ownProps","isNote","ActionSummaryItem","connect","displayName","colSpan","connector","nodes","getApplicationState","applicationState","getInfo","info","isSideSectionShrunk","shrinkSide","isResourcesSectionCollapsed","resourcesCollapsed","isHeaderCollapsed","headerCollapsed","isSideSectionCollapsed","sideCollapsed","getLayout","getHeaderBounds","header","getSideBounds","side","getSideHeaderBounds","getSideMainBounds","main","getActionsBounds","getActionsHeaderBounds","getActionsMainBounds","getFooterBounds","footer","getResourcesBounds","resources","getResourcesHeaderBounds","getResourcesMainBounds","isEditingNav","editingNav","isEditingActions","editingActions","isEditingItems","editingItems","getSplitClipboard","splitClipboard","getRouteResources","getResourceCalcProgress","progress","getResourceCalcError","getActionResourceByGlobalIndex","globalIndex","content","isOnlyShowingChangedResources","showOnlyChangedResources","isShowingHelp","showHelp","BRANCH_LIMIT","SPLIT_LIMIT","ITEM_LIMIT","validateBranch","branchLength","validateSplit","validateItem","validateAction","parseDeltaString","delta","invalidNames","names","validNames","sort","j","getInvalidItemNamesIn","Object","keys","message","setRouteState","payload","setProjectName","setActiveBranchAndSplit","setActiveAction","createBranch","splice","setBranchName","setBranchExpanded","deleteBranch","swapBranches","temp","mergeNextIntoBranch","oldSplitSize","concat","breakBranchAt","hiSplits","slice","createSplit","templateSplit","setSplitName","setSplitExpanded","deleteSplit","swapSplits","moveFirstSplitToPreviousBranch","movedSplitIndex","moveLastSplitToNextBranch","beforeMoveIndex","pop","createItem","setItemName","setItemColor","swapItems","deleteItem","createAction","routeAction","setActionName","setActionExpanded","setActionDeltaString","deleteAction","swapActions","reparseAllDeltaStrings","changeActiveSplit","current","changed","changeBy","changedBranch","changedSplit","calc","max","defaultLayout","shrink","windowWidth","windowHeight","FOOTER_HEIGHT","SIDE_HEADER_HEIGHT","RESOURCE_HEADER_HEIGHT","headerHeight","sideHeight","sideWidth","mainWidth","resourceHeight","actionHeight","resourceY","layoutOption","markResourceDirty","currentProgress","setWindowWidth","doLayout","innerWidth","setHeaderCollapsed","collapsed","setSideCollapsed","setResourcesCollapsed","setEditingNav","editing","setEditingActions","setEditingItems","setInfo","setSplitClipboard","setResourceContent","setResourceError","markResourceDirtyAt","markResourceDirtyAtSplit","setShowOnlyChangedResources","setShowingHelp","initialState","settingState","autoSave","onlyShowChangedItems","itemFilter","noResources","createSlice","reducers","routingReducers","applicationReducers","setSettingState","setItemFilter","setAutoSaveEnabled","enabled","store","configureStore","reducer","benchStart","Date","getTime","benchEnd","start","isLastBranch","copiedSplit","splitToCopy","dispatch","bindActionCreators","splitNode","appActions","isLast","isFirstBranch","isFirst","expandButtonCell","handleCreateSplit","showAlert","startTime","title","placeholder","onChange","target","disabled","execute","currentBranchName","nextBranchName","splitNodes","branchCount","branchNode","branchNodes","sideHeaderBounds","sideMainBounds","buttonSection","getSettingState","isAutoSaveEnabled","getItemFilter","autoSaveEnabled","projectNameSection","exportButton","showIODialog","saveButton","helpButton","allButtons","text","DeltaItem","foreground","displayValueRef","displayValue","backgroundColor","deltaItems","Fragment","actionNode","expandButton","active","actionNodes","actionMainBounds","actionHeaderBounds","splitName","Alert","alertActions","boxSizing","padding","bottom","right","alertAction","hideAlert","itemCount","useState","renamed","setRenamed","change","filterString","getActiveGlobalIndex","filteredIndices","_","lowerCaseFilter","toLowerCase","indices","itemIndex","includes","getFilteredItemIndices","itemIndices","itemSection","row","itemMainBounds","itemHeaderBounds","activeActionName","total","onlyShowChanging","resourceInfo","id","checked","htmlFor","handle","stopResourceCalcClock","clearInterval","update","getState","currentlyNeedToUpdate","before","resourceBefore","actionCount","getActionIndexFromGlobal","getActionDeltaError","branchName","actionName","resourceError","after","getAmountInBefore","n","oldAmount","newAmount","calculateChange","updateAt","stopAutoSaveClock","save","downloadName","setFile","importFunc","theFile","importer","string","files","Help","mapStateToProps","headerBounds","sideBounds","actionsBounds","footerBounds","resourcesBounds","mapDispatchToProps","App","props","alertContent","showIOAlert","addEventListener","this","redoLayout","bind","storedState","setInterval","removeEventListener","setState","show","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f062ff0.chunk.js","sourcesContent":["import { decodeArray, decodeLengthPrepended, encodeArray, encodeLengthPrepended } from \"./compress\";\nimport { SplitData, RouteSplit, deflateRouteSplit, inflateSplitData, compressSplit, decompressSplit } from \"./split\";\nexport type BranchData = {\n\tname: string,\n\tsplits: SplitData[],\n}\nexport type RouteBranch = {\n\tname: string,\n\texpanded: boolean,\n\tsplits: RouteSplit[],\n}\n\nexport function newBranch(): RouteBranch {\n\treturn {\n\t\tname: \"\",\n\t\texpanded: true,\n\t\tsplits: [],\n\t};\n}\n\nexport function deflateRouteBranch(branch: RouteBranch): BranchData {\n\treturn {\n\t\tname: branch.name || \"\",\n\t\tsplits: (branch.splits || []).map(deflateRouteSplit)\n\t};\n}\n\nexport function inflateBranchData(branch: BranchData): RouteBranch {\n\treturn {\n\t\tname: branch.name || \"\",\n\t\texpanded: true,\n\t\tsplits: (branch.splits || []).map(inflateSplitData),\n\t};\n}\n\nexport function compressBranch(branch: BranchData, itemNameToIndex: Record<string, number>): string {\n\tconst { name, splits } = branch;\n\tconst nameEncoded = encodeLengthPrepended(name);\n\tconst splitsEncoded = encodeArray(splits, split => compressSplit(split, itemNameToIndex));\n\treturn `${nameEncoded}${splitsEncoded}`;\n}\n\nexport function decompressBranch(compressedString: string, currentIndex: number, itemNames: string[]): [BranchData, number, string | null] {\n\tconst [name, indexAfterName, nameError] = decodeLengthPrepended(compressedString, currentIndex);\n\tif (nameError !== null) {\n\t\treturn [deflateRouteBranch(newBranch()), -1, `Fail to decompress branch name: ${nameError}`];\n\t}\n\tconst [splits, indexAfterSplits, splitsError] = decodeArray(compressedString, indexAfterName, (str, idx) => decompressSplit(str, idx, itemNames));\n\tif (splitsError !== null) {\n\t\treturn [deflateRouteBranch(newBranch()), -1, `Fail to decompress branch splits: ${splitsError}`];\n\t}\n\tconst branch: BranchData = {\n\t\tname,\n\t\tsplits,\n\t};\n\treturn [branch, indexAfterSplits, null];\n}","function shouldMakeTextWhiteForRGB(r: number, g: number, b: number): boolean {\n\t//https://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color\n\tconst L = 0.2126 * linerize(r) + 0.7152 * linerize(g) + 0.0722 * linerize(b);\n\treturn L < 1.8;\n}\n\nfunction linerize(c: number): number {\n\tc = c / 255.0;\n\tif (c <= 0.03928) {\n\t\tc = c / 12.92;\n\t} else {\n\t\tc = (c + 0.055) / 1.055 ^ 2.4;\n\t}\n\treturn c;\n}\n\nfunction htmlColorToRGB(htmlColor: string): number[] {\n\t//https://stackoverflow.com/questions/1573053/javascript-function-to-convert-color-names-to-hex-codes\n\tif (!window.getComputedStyle) {\n\t\treturn [255, 255, 255];\n\t}\n\tconst div = document.getElementById(\"temp\");\n\tif (div == null) {\n\t\treturn [255, 255, 255];\n\t}\n\tdiv.style.color = \"white\";\n\tdiv.style.color = htmlColor;\n\tconst computed = window.getComputedStyle(div).color;\n\tif (computed === \"rgb(255, 255, 255)\") {\n\t\treturn [255, 255, 255];\n\t}\n\tconst rgb = computed.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\").map(i => Number(i.trim()));\n\treturn rgb;\n}\n\nexport function randomColor(): string {\n\tconst hex = \"0123456789abcdef\";\n\tconst r1 = hex[Math.floor(Math.random() * 12) + 4];\n\tconst r2 = hex[Math.floor(Math.random() * 4) * 4];\n\tconst g1 = hex[Math.floor(Math.random() * 12) + 4];\n\tconst g2 = hex[Math.floor(Math.random() * 4) * 4];\n\tconst b1 = hex[Math.floor(Math.random() * 12) + 4];\n\tconst b2 = hex[Math.floor(Math.random() * 4) * 4];\n\treturn `#${r1}${r2}${g1}${g2}${b1}${b2}`;\n}\n\nexport function getForegroundAndBackground(background?: string): [string, string] {\n\tif (!background) {\n\t\treturn [\"black\", \"white\"];\n\t}\n\tconst [r, g, b] = htmlColorToRGB(background);\n\tif (r === 255 && g === 255 && b === 255) {\n\t\treturn [\"black\", \"white\"];\n\t}\n\tif (shouldMakeTextWhiteForRGB(r, g, b)) {\n\t\treturn [\"white\", background];\n\t}\n\treturn [\"black\", background];\n}","import { randomColor } from \"util/color\";\nimport { decodeLengthPrepended, encodeLengthPrepended } from \"./compress\";\n\nexport type ItemData = {\n\tname: string,\n\tcolor: string,\n}\n\nexport type RouteItem = {\n\tname: string,\n\tcolor: string,\n}\n\nexport type ItemDelta = {\n\tvalue: number,\n\tchange: number,\n}\n\nexport function newItem(): RouteItem {\n\treturn {\n\t\tname: \"\",\n\t\tcolor: randomColor(),\n\t};\n}\n\nexport function deflateRouteItem(item: RouteItem): ItemData {\n\treturn {\n\t\tname: item.name || \"\",\n\t\tcolor: item.color || \"\",\n\t};\n}\n\nexport function inflateItemData(item: ItemData): RouteItem {\n\treturn {\n\t\tname: item.name || \"\",\n\t\tcolor: item.color || \"\",\n\t};\n}\n\nexport function compressItem(item: ItemData): string {\n\tconst { name, color } = item;\n\tconst nameEncoded = encodeLengthPrepended(name.replace(/:/g, \"_\"));\n\tconst colorEncoded = encodeLengthPrepended(color);\n\treturn `${nameEncoded}${colorEncoded}`;\n}\n\nexport function decompressItem(compressedString: string, currentIndex: number): [ItemData, number, string | null] {\n\tconst [name, indexAfterName, nameError] = decodeLengthPrepended(compressedString, currentIndex);\n\tif (nameError !== null) {\n\t\treturn [newItem(), -1, `Fail to decompress item name: ${nameError}`];\n\t}\n\tconst [color, indexAfterColor, colorError] = decodeLengthPrepended(compressedString, indexAfterName);\n\tif (colorError !== null) {\n\t\treturn [newItem(), -1, `Fail to decompress item color: ${nameError}`];\n\t}\n\tconst item: ItemData = { name, color };\n\treturn [item, indexAfterColor, null];\n}","import { decodeBoolean, decodeLengthPrepended, encodeBoolean, encodeLengthPrepended } from \"./compress\";\nimport { DeltaString, DeltaError, ActionDelta, stringToDelta, deltaToCompressedString, compressedStringToDelta, deltaToString } from \"./delta\";\n\nexport type ActionData = {\n\tname: string,\n\tdeltaString: DeltaString,\n}\n\nexport type RouteAction = {\n\tname: string,\n\texpanded: boolean,\n\tdeltaString: DeltaString,\n\tdeltaError: DeltaError,\n\tdeltas: ActionDelta | null,\n}\n\nexport function newAction(): RouteAction {\n\treturn {\n\t\tname: \"\",\n\t\texpanded: true,\n\t\tdeltaString: \"\",\n\t\tdeltaError: null,\n\t\tdeltas: {},\n\t};\n}\n\nexport function cloneAction(action: RouteAction): RouteAction {\n\tconst [deltas, deltaError] = stringToDelta(action.deltaString);\n\treturn {\n\t\tname: action.name,\n\t\texpanded: action.expanded,\n\t\tdeltaString: action.deltaString,\n\t\tdeltaError,\n\t\tdeltas,\n\t};\n}\n\nexport function deflateRouteAction(action: RouteAction): ActionData {\n\treturn {\n\t\tname: action.name || \"\",\n\t\tdeltaString: action.deltaString || \"\",\n\t};\n}\n\nexport function inflateActionData(action: ActionData): RouteAction {\n\tconst [deltas, deltaError] = stringToDelta(action.deltaString);\n\tconst routeAction = {\n\t\tname: action.name || \"\",\n\t\tdeltaString: action.deltaString || \"\",\n\t\texpanded: true,\n\t\tdeltas,\n\t\tdeltaError,\n\t};\n\treturn routeAction;\n}\n\nexport function compressAction(action: ActionData, itemNameToIndex: Record<string, number>): string {\n\tconst { name, deltaString } = action;\n\tconst nameEncoded = encodeLengthPrepended(name);\n\n\tconst [deltas, error] = stringToDelta(deltaString);\n\tconst hasError = error !== null || deltas === null;\n\tconst hasErrorEncoded = encodeBoolean(hasError);\n\tlet deltaStringEncoded;\n\tif (error !== null || deltas === null) {\n\t\tdeltaStringEncoded = encodeLengthPrepended(deltaString);\n\t} else {\n\t\tdeltaStringEncoded = encodeLengthPrepended(deltaToCompressedString(deltas, itemNameToIndex));\n\t}\n\n\treturn `${nameEncoded}${hasErrorEncoded}${deltaStringEncoded}`;\n}\n\nexport function decompressAction(compressedString: string, currentIndex: number, itemNames: string[]): [ActionData, number, string | null] {\n\tconst [name, indexAfterName, nameError] = decodeLengthPrepended(compressedString, currentIndex);\n\n\tif (nameError !== null) {\n\t\treturn [{ name: \"\", deltaString: \"\" }, -1, `Fail to decompress action name: ${nameError}`];\n\t}\n\tconst [hasError, indexAfterHasError, hasErrorError] = decodeBoolean(compressedString, indexAfterName);\n\tif (hasErrorError !== null) {\n\t\treturn [{ name: \"\", deltaString: \"\" }, -1, `Fail to decompress action delta error: ${hasErrorError}`];\n\t}\n\tconst [deltaStringRaw, indexAfterDeltaString, deltaStringError] = decodeLengthPrepended(compressedString, indexAfterHasError);\n\tif (deltaStringError !== null) {\n\t\treturn [{ name: \"\", deltaString: \"\" }, -1, `Fail to decompress action delta string: ${deltaStringError}`];\n\t}\n\tlet deltaString: string;\n\tif (hasError) {\n\t\tdeltaString = deltaStringRaw;\n\t} else {\n\t\tconst [deltas, deltaDecompressError] = compressedStringToDelta(deltaStringRaw, itemNames);\n\t\tif (deltaDecompressError !== null || deltas === null) {\n\t\t\treturn [{ name: \"\", deltaString: \"\" }, -1, `Fail to decompress action delta: ${deltaDecompressError}`];\n\t\t}\n\t\tdeltaString = deltaToString(deltas);\n\t}\n\n\tconst action: ActionData = { name, deltaString };\n\treturn [action, indexAfterDeltaString, null];\n}","import { ActionData, RouteAction, deflateRouteAction, inflateActionData, cloneAction, compressAction, decompressAction } from \"./action\";\nimport { decodeArray, decodeLengthPrepended, encodeArray, encodeLengthPrepended } from \"./compress\";\n\nexport type SplitData = {\n\tname: string,\n\tactions: ActionData[],\n}\n\nexport type RouteSplit = {\n\tname: string,\n\texpanded: boolean,\n\tactions: RouteAction[],\n}\n\nexport function newSplit(): RouteSplit {\n\treturn {\n\t\tname: \"\",\n\t\texpanded: true,\n\t\tactions: [],\n\t};\n}\n\nexport function cloneSplit(split: RouteSplit): RouteSplit {\n\treturn {\n\t\tname: split.name,\n\t\texpanded: split.expanded,\n\t\tactions: split.actions.map(cloneAction),\n\t};\n}\n\nexport function deflateRouteSplit(split: RouteSplit): SplitData {\n\treturn {\n\t\tname: split.name || \"\",\n\t\tactions: (split.actions || []).map(deflateRouteAction),\n\t};\n}\n\nexport function inflateSplitData(split: SplitData): RouteSplit {\n\treturn {\n\t\tname: split.name || \"\",\n\t\texpanded: false,\n\t\tactions: (split.actions || []).map(inflateActionData),\n\t};\n}\n\nexport function compressSplit(split: SplitData, itemNameToIndex: Record<string, number>): string {\n\tconst { name, actions } = split;\n\tconst nameEncoded = encodeLengthPrepended(name);\n\tconst actionsEncoded = encodeArray(actions, action => compressAction(action, itemNameToIndex));\n\treturn `${nameEncoded}${actionsEncoded}`;\n}\n\nexport function decompressSplit(compressedString: string, currentIndex: number, itemNames: string[]): [SplitData, number, string | null] {\n\tconst [name, indexAfterName, nameError] = decodeLengthPrepended(compressedString, currentIndex);\n\tif (nameError !== null) {\n\t\treturn [deflateRouteSplit(newSplit()), -1, `Fail to decompress split name: ${nameError}`];\n\t}\n\tconst [actions, indexAfterActions, actionsError] = decodeArray(compressedString, indexAfterName, (str, idx) => decompressAction(str, idx, itemNames));\n\tif (actionsError !== null) {\n\t\treturn [deflateRouteSplit(newSplit()), -1, `Fail to decompress split actions: ${actionsError}`];\n\t}\n\n\tconst split: SplitData = {\n\t\tname,\n\t\tactions,\n\t};\n\treturn [split, indexAfterActions, null];\n}\n\nexport function parseCoords(str: string): [number, number, number] | undefined {\n\tconst parts = str.split(\",\").map(s => s.trim());\n\tif (parts.length !== 3) {\n\t\treturn undefined;\n\t}\n\tconst coords = parts.map(i => Number(i));\n\tfor (const coord of coords) {\n\t\tif (!Number.isInteger(coord)) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn [coords[0], coords[1], coords[2]];\n\n}","import { RouteState } from \"store/routing/type\";\nimport { deflateRouteState, inflateRouteData, RouteData } from \"./storage\";\nimport { compressBranch, decompressBranch } from \"./branch\";\nimport { compressItem, decompressItem } from \"./item\";\nimport zlib from \"zlib\";\n\ntype LengthPrependedString = string;\ntype CompressedStateString = string;\n\nexport function compressState(state: RouteState): CompressedStateString {\n\tconst { projectName, branches, items } = deflateRouteState(state);\n\tconst projectNameEncoded = encodeLengthPrepended(projectName);\n\n\tconst itemNameToIndex: Record<string, number> = {};\n\titems.forEach((item, index) => {\n\t\titemNameToIndex[item.name] = index;\n\t});\n\n\tconst branchesEncoded = encodeArray(branches, branch => compressBranch(branch, itemNameToIndex));\n\tconst itemsEncoded = encodeArray(items, compressItem);\n\treturn `${projectNameEncoded}${itemsEncoded}${branchesEncoded}`;\n}\n\nexport function decompressState(compressedStateString: CompressedStateString): [RouteState | null, string | null] {\n\tconst [projectName, indexAfterProjectName, projectNameError] = decodeLengthPrepended(compressedStateString, 0);\n\tif (projectNameError !== null) {\n\t\treturn [null, `Fail to decompress project name: ${projectNameError}`];\n\t}\n\tconst [items, indexAfterItems, itemsError] = decodeArray(compressedStateString, indexAfterProjectName, decompressItem);\n\tif (itemsError !== null) {\n\t\treturn [null, `Fail to decompress project items: ${itemsError}`];\n\t}\n\tconst itemNames = items.map(item => item.name);\n\tconst [branches, indexAfterBranches, branchesError] = decodeArray(compressedStateString, indexAfterItems, (str, idx) => decompressBranch(str, idx, itemNames));\n\tif (branchesError !== null) {\n\t\treturn [null, `Fail to decompress project branches: ${branchesError}`];\n\t}\n\tif (indexAfterBranches !== compressedStateString.length) {\n\t\treturn [null, \"Fail to decompress project: length mismatch\"];\n\t}\n\tconst data: RouteData = {\n\t\tprojectName,\n\t\tbranches,\n\t\titems,\n\t};\n\n\tconst state = inflateRouteData(data);\n\treturn [state, null];\n}\n\nexport function encodeLengthPrepended(str: string): LengthPrependedString {\n\tif (str.length === 0) {\n\t\treturn \":\";\n\t}\n\treturn `${str.length}:${str}`;\n}\n\nexport function decodeLengthPrepended(lengthPrependedString: LengthPrependedString, currentIndex: number): [string, number, string | null] {\n\tconst i = lengthPrependedString.indexOf(\":\", currentIndex);\n\tif (i < currentIndex) {\n\t\treturn [\"null\", -1, \"Fail to decode: length not found\"];\n\t}\n\tif (i === currentIndex) {\n\t\treturn [\"\", i + 1, null];\n\t}\n\tconst len = Number(lengthPrependedString.substring(currentIndex, i));\n\tif (!Number.isInteger(len)) {\n\t\treturn [\"null\", -1, `Fail to decode: invalid length: ${len}`];\n\t}\n\tif (i + len >= lengthPrependedString.length) {\n\t\treturn [\"null\", -1, `Fail to decode: length out of bound: ${len}`];\n\t}\n\tconst decoded = lengthPrependedString.substring(i + 1, i + 1 + len);\n\treturn [decoded, i + len + 1, null];\n}\n\nexport function encodeBoolean(val: boolean): string {\n\treturn val ? \"T\" : \"F\";\n}\n\nexport function decodeBoolean(str: string, currentIndex: number): [boolean, number, string | null] {\n\tif (currentIndex < 0 || currentIndex >= str.length) {\n\t\treturn [false, -1, \"Fail to decode: index out of bound\"];\n\t}\n\tif (str[currentIndex] === \"T\") {\n\t\treturn [true, currentIndex + 1, null];\n\t}\n\tif (str[currentIndex] === \"F\") {\n\t\treturn [false, currentIndex + 1, null];\n\t}\n\treturn [false, -1, `Fail to decode: invalid boolean: ${str[currentIndex]}`];\n}\n\nexport function encodeArray<T>(array: T[], encoder: (element: T) => string): string {\n\treturn `[${array.map(encoder).join(\"\")}]`;\n}\n\nexport function decodeArray<T>(compressedString: string, currentIndex: number, decoder: (str: string, idx: number) => [T, number, string | null]): [T[], number, string | null] {\n\tif (currentIndex < 0 || currentIndex >= compressedString.length) {\n\t\treturn [[], -1, \"Fail to decode array: index out of bound\"];\n\t}\n\tif (compressedString[currentIndex] !== \"[\") {\n\t\treturn [[], -1, \"Fail to decode array: invalid array\"];\n\t}\n\tconst array: T[] = [];\n\tcurrentIndex++;\n\twhile (currentIndex < compressedString.length && compressedString[currentIndex] !== \"]\") {\n\t\tconst [element, nextIndex, error] = decoder(compressedString, currentIndex);\n\t\tif (error !== null) {\n\t\t\treturn [[], -1, `Fail to decode array at element ${array.length}: ${error}`];\n\t\t}\n\t\tcurrentIndex = nextIndex;\n\t\tarray.push(element);\n\t}\n\tif (currentIndex >= compressedString.length) {\n\t\treturn [[], -1, \"Fail to decode array: array not properly closed\"];\n\t}\n\treturn [array, currentIndex + 1, null];\n}\n\ntype EncodedStateString = string;\n\nexport function deflateCompressedState(compressedStateString: CompressedStateString): EncodedStateString {\n\treturn zlib.deflateSync(compressedStateString).toString(\"base64\");\n}\nexport function inflateEncodedState(stateEncoded: EncodedStateString): CompressedStateString {\n\treturn zlib.inflateSync(Buffer.from(stateEncoded, \"base64\")).toString();\n}\n\n","import { BranchData, deflateRouteBranch, inflateBranchData } from \"./branch\";\nimport { ItemData, deflateRouteItem, inflateItemData } from \"./item\";\nimport { RouteState } from \"store/routing/type\";\nimport { compressState, decompressState, deflateCompressedState, inflateEncodedState } from \"./compress\";\nimport { SettingState } from \"store/setting/type\";\nexport type RouteData = {\n\tprojectName: string,\n\tbranches: BranchData[],\n\titems: ItemData[],\n}\n\nconst OLD_KEYS = [\"RRT_STATE_v1\"];\nconst KEY = \"RRT_COMPRESS_STATE\";\nconst SETTING_KEY = \"RRT_SETTINGS\";\n\nexport function deflateRouteState(state: RouteState): RouteData {\n\treturn {\n\t\tbranches: (state.branches || []).map(deflateRouteBranch),\n\t\titems: (state.items || []).map(deflateRouteItem),\n\t\tprojectName: state.projectName || \"\",\n\t};\n}\n\nexport function inflateRouteData(data: RouteData): RouteState {\n\treturn {\n\t\tprojectName: data.projectName || \"\",\n\t\tactiveBranch: -1,\n\t\tactiveSplit: -1,\n\t\tactiveAction: -1,\n\t\tbranches: (data.branches || []).map(inflateBranchData),\n\t\titems: (data.items || []).map(inflateItemData),\n\t};\n}\n\nexport function newEmptyRouteState(): RouteState {\n\treturn {\n\t\tprojectName: \"Unnamed Project\",\n\t\tactiveBranch: -1,\n\t\tactiveSplit: -1,\n\t\tactiveAction: -1,\n\t\tbranches: [],\n\t\titems: [],\n\t};\n}\n\nexport function exportAsCompressed(state: RouteState): string {\n\treturn compressState(state);\n}\n\nexport function exportAsEncoded(state: RouteState): string {\n\treturn deflateCompressedState(compressState(state));\n}\n\nexport function exportAsTxt(): string {\n\t//TODO\n\treturn \"\";\n}\n\nexport function exportAsLss(): string {\n\t//TODO\n\treturn \"\";\n}\n\nexport function exportAsJson(state: RouteState): string {\n\treturn JSON.stringify(deflateRouteState(state));\n}\n\nexport function importAsCompressed(str: string): [RouteState | null, string | null] {\n\treturn decompressState(str);\n}\n\nexport function importAsEncoded(str: string): [RouteState | null, string | null] {\n\tconst compressed = inflateEncodedState(str);\n\treturn decompressState(compressed);\n}\n\nexport function importAsJson(str: string): [RouteState | null, string | null] {\n\treturn [inflateRouteData(JSON.parse(str) as RouteData), null];\n}\n\nexport function storeToLocalStorage(state: RouteState, settings: SettingState): void {\n\tconst compressed = exportAsCompressed(state);\n\tlocalStorage.setItem(KEY, compressed);\n\tsaveSettings(settings);\n}\n\nexport function downloadToFile(projectName: string, str: string, extension: string): void {\n\tconst blob = new Blob([str], { type: \"text\" });\n\tconst a = document.createElement(\"a\");\n\tconst fileName = projectName + \".\" + extension;\n\ta.download = fileName;\n\ta.href = URL.createObjectURL(blob);\n\ta.dataset.downloadurl = [\"text\", a.download, a.href].join(\":\");\n\ta.style.display = \"none\";\n\tdocument.body.appendChild(a);\n\ta.click();\n\tdocument.body.removeChild(a);\n\tsetTimeout(function () { URL.revokeObjectURL(a.href); }, 1500);\n}\n\nexport function clearLocalStorage(): void {\n\tOLD_KEYS.forEach(localStorage.removeItem);\n\tlocalStorage.removeItem(KEY);\n}\n\nexport function loadfromLocalStorage(): [RouteState | undefined, SettingState | undefined] {\n\tconst compressed = localStorage.getItem(KEY);\n\tconst settingsString = localStorage.getItem(SETTING_KEY);\n\tlet settings;\n\tif (settingsString === null) {\n\t\tconsole.error(\"Failed to load settings from localstorage\");\n\t\tsettings = undefined;\n\t} else {\n\t\tsettings = JSON.parse(settingsString);\n\t}\n\tif (compressed === null) {\n\t\tconsole.error(\"Failed to load from localstorage\");\n\t\treturn [undefined, settings];\n\t}\n\tconst [state, error] = importAsCompressed(compressed);\n\tif (error !== null || state === null) {\n\t\tconsole.error(`Failed to load from localstorage: ${error}`);\n\t\treturn [undefined, settings];\n\t}\n\treturn [state, settings];\n}\n\nexport function saveSettings(settings: SettingState): void {\n\tlocalStorage.setItem(SETTING_KEY, JSON.stringify(settings));\n}\n\nexport function readFromFile(file: File, callback: (content: string) => void): void {\n\tif (file) {\n\t\tconst reader = new FileReader();\n\t\treader.onloadend = () => {\n\t\t\tconst str = reader.result;\n\t\t\tcallback(str?.toString() || \"\");\n\t\t};\n\t\treader.readAsText(file);\n\t}\n}\n","export type ActionDelta = Record<string, DeltaItem>;\nexport type DeltaItem = {\n\ttype: DeltaType,\n\tvalue: number | string,\n}\nexport type DeltaType = \"add\" | \"set\" | \"ref_set\" | \"ref_add\" | \"ref_sub\";\nexport type DeltaOperator = \"+\" | \"-\" | \"=\" | \"?\";\nexport type DeltaString = string;\nexport type CompressedDeltaString = string;\nexport type DeltaError = string | null;\ntype DeltaItemString = string;\ntype CompressedDeltaItemString = string;\n\nexport function deleteItemInDelta(deltas: ActionDelta, deleteName: string): void {\n\tfor (const name in deltas) {\n\t\tif (deltas[name].type.startsWith(\"ref\")) {\n\t\t\tif (deltas[name].value === deleteName) {\n\t\t\t\tdelete deltas[name];\n\t\t\t}\n\t\t}\n\t}\n\tif (deleteName in deltas) {\n\t\tdelete deltas[deleteName];\n\t}\n}\n\nexport function renameItemInDelta(deltas: ActionDelta, oldName: string, newName: string): void {\n\tfor (const name in deltas) {\n\t\tif (deltas[name].type.startsWith(\"ref\")) {\n\t\t\tif (deltas[name].value === oldName) {\n\t\t\t\tdeltas[name].value = newName;\n\t\t\t}\n\t\t}\n\t}\n\tif (oldName in deltas) {\n\t\tdeltas[newName] = deltas[oldName];\n\t\tdelete deltas[oldName];\n\t}\n}\n\nexport function deltaToString(deltas: ActionDelta): DeltaString {\n\tconst array = [];\n\tfor (const name in deltas) {\n\t\tarray.push(itemToString(name, deltas[name]));\n\t}\n\treturn array.join(\", \");\n}\n\nexport function stringToDelta(str: DeltaString): [ActionDelta | null, DeltaError] {\n\tif (!str || !str.length) {\n\t\treturn [{}, null];\n\t}\n\tif (!str.trim()) {\n\t\treturn [{}, null];\n\t}\n\n\tconst array = str.split(\",\").map(e => e.trim());\n\tconst deltaObj: ActionDelta = {};\n\tconst errors: string[] = [];\n\tarray.forEach(str => {\n\t\tconst [item, itemError] = stringToItem(str.trim() as DeltaItemString);\n\t\tif (item !== null) {\n\t\t\tif (item.name in deltaObj) {\n\t\t\t\terrors.push(`Duplicate: ${item.name}`);\n\t\t\t} else {\n\t\t\t\tdeltaObj[item.name] = {\n\t\t\t\t\ttype: item.type,\n\t\t\t\t\tvalue: item.value,\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (itemError !== null) {\n\t\t\t\terrors.push(itemError);\n\t\t\t}\n\t\t}\n\t});\n\treturn errors.length > 0 ? [null, errors.join(\"; \")] : [deltaObj, null];\n}\n\nfunction itemToString(name: string, item: DeltaItem): DeltaItemString {\n\tconst { type, value } = item;\n\tconst [op, processedValue] = typeToOperator(type, value);\n\tlet quantity = processedValue;\n\tif (type.startsWith(\"ref\")) {\n\t\tquantity = `[${processedValue}]`;\n\t}\n\treturn `[${name}]${op}${quantity}`;\n}\n\nfunction stringToItem(str: DeltaItemString): [(DeltaItem & { name: string }) | null, DeltaError] {\n\t//\\[*?<name>](+|=|-)<quantity>\n\tif (!str || !str.length) {\n\t\treturn [null, null];//no item, skip\n\t}\n\tif (!str.startsWith(\"[\")) {\n\t\treturn [null, `Invalid: ${str}`];\n\t}\n\tconst nameEnd = str.indexOf(\"]\");\n\tif (nameEnd < 0) {\n\t\treturn [null, `Item name bracket not closed: ${str}`];\n\t}\n\tconst name = str.substring(1, nameEnd);\n\tif (str.length <= nameEnd + 1) {\n\t\treturn [null, `Item [${name}] missing operator and quantity`];\n\t}\n\tconst op = str[nameEnd + 1];\n\tconst value = str.substring(nameEnd + 2);\n\tif (value.length === 0) {\n\t\treturn [null, `Item [${name}] has empty value`];\n\t}\n\tif (value.startsWith(\"[\")) {\n\t\tif (!value.endsWith(\"]\")) {\n\t\t\treturn [null, `Item reference bracket not closed: ${value}`];\n\t\t}\n\t\tconst ref = value.substring(1, value.length - 1);\n\t\treturn parseRefItem(name, op as DeltaOperator, ref);\n\t} else {\n\t\treturn parseValueItem(name, op as DeltaOperator, value);\n\t}\n}\n\nexport function deltaToCompressedString(deltas: ActionDelta, itemMap: Record<string, number>): CompressedDeltaString {\n\tconst array = [];\n\tfor (const name in deltas) {\n\t\tarray.push(itemToCompressedString(name, itemMap, deltas[name]));\n\t}\n\treturn array.join(\",\");\n}\n\nexport function compressedStringToDelta(str: CompressedDeltaString, inverseItemMap: string[]): [ActionDelta | null, DeltaError] {\n\tif (!str || !str.length) {\n\t\treturn [{}, null];\n\t}\n\tif (!str.trim()) {\n\t\treturn [{}, null];\n\t}\n\n\tconst array = str.split(\",\").map(e => e.trim());\n\tconst deltaObj: ActionDelta = {};\n\tconst errors: string[] = [];\n\tarray.forEach(str => {\n\t\tconst [item, itemError] = compressedStringToItem(str.trim() as CompressedDeltaItemString, inverseItemMap);\n\t\tif (item !== null) {\n\t\t\tdeltaObj[item.name] = {\n\t\t\t\ttype: item.type,\n\t\t\t\tvalue: item.value,\n\t\t\t};\n\t\t} else {\n\t\t\tif (itemError !== null) {\n\t\t\t\terrors.push(itemError);\n\t\t\t}\n\t\t}\n\t});\n\treturn errors.length > 0 ? [null, errors.join(\"; \")] : [deltaObj, null];\n}\n\nfunction itemToCompressedString(name: string, itemMap: Record<string, number>, item: DeltaItem): CompressedDeltaItemString {\n\tconst { type, value } = item;\n\tconst [op, processedValue] = typeToOperator(type, value);\n\tlet quantity = processedValue;\n\tif (type.startsWith(\"ref\")) {\n\t\tif (processedValue in itemMap) {\n\t\t\tquantity = `:${itemMap[processedValue]}`;\n\t\t} else {\n\t\t\tquantity = `:${processedValue}`;\n\t\t}\n\t}\n\tlet ref: string | number = name;\n\tif (name in itemMap) {\n\t\tref = itemMap[name];\n\t} else {\n\t\tref = ref.replace(/:/g, \"\");\n\t}\n\treturn `${ref}:${op}${quantity}`;\n}\n\nfunction compressedStringToItem(str: CompressedDeltaItemString, inverseItemMap: string[]): [(DeltaItem & { name: string }) | null, DeltaError] {\n\tif (!str || !str.length) {\n\t\treturn [null, null];//no item, skip\n\t}\n\tconst indexEnd = str.indexOf(\":\");\n\tif (indexEnd < 0) {\n\t\treturn [null, `Item index not found: ${str}`];\n\t}\n\tconst index = str.substring(0, indexEnd);\n\tif (str.length <= indexEnd + 1) {\n\t\treturn [null, `Item [${index}] missing operator and quantity`];\n\t}\n\tconst indexNum = Number(index);\n\tlet name: string;\n\tif (!Number.isInteger(indexNum)) {\n\t\tname = index;\n\t} else if (indexNum < 0 || indexNum >= inverseItemMap.length) {\n\t\treturn [null, `Invalid index: ${index}`];\n\t} else {\n\t\tname = inverseItemMap[indexNum];\n\t}\n\n\tconst op = str[indexEnd + 1];\n\tconst value = str.substring(indexEnd + 2);\n\tif (value.length === 0) {\n\t\treturn [null, `Item [${name}] has empty value`];\n\t}\n\n\tif (value.startsWith(\":\")) {\n\t\tconst refIndex = value.substring(1);\n\t\tconst refIndexNum = Number(refIndex);\n\t\tlet ref: string;\n\t\tif (!Number.isInteger(refIndexNum)) {\n\t\t\tref = refIndex;\n\t\t} else if (refIndexNum < 0 || refIndexNum >= inverseItemMap.length) {\n\t\t\treturn [null, `Invalid ref index: ${refIndex}`];\n\t\t} else {\n\t\t\tref = inverseItemMap[refIndexNum];\n\t\t}\n\t\treturn parseRefItem(name, op as DeltaOperator, ref);\n\t} else {\n\t\treturn parseValueItem(name, op as DeltaOperator, value);\n\t}\n}\n\nexport function typeToOperator(type: DeltaType, value: string | number): [DeltaOperator, string | number] {\n\tswitch (type) {\n\t\tcase \"add\":\n\t\t\tif (value >= 0) {\n\t\t\t\treturn [\"+\", value];\n\t\t\t} else {\n\t\t\t\treturn [\"-\", -value];\n\t\t\t}\n\t\tcase \"set\":\n\t\tcase \"ref_set\":\n\t\t\treturn [\"=\", value];\n\t\tcase \"ref_add\":\n\t\t\treturn [\"+\", value];\n\t\tcase \"ref_sub\":\n\t\t\treturn [\"-\", value];\n\t\tdefault: return [\"?\", value];\n\t}\n}\n\nfunction parseRefItem(name: string, op: DeltaOperator, value: string): [(DeltaItem & { name: string }) | null, DeltaError] {\n\tlet type: DeltaType;\n\tswitch (op) {\n\t\tcase \"+\": type = \"ref_add\"; break;\n\t\tcase \"-\": type = \"ref_sub\"; break;\n\t\tcase \"=\": type = \"ref_set\"; break;\n\t\tdefault: return [null, `Item [${name}]: unknown operator \"${op}\"`];\n\t}\n\treturn [{\n\t\tname,\n\t\ttype,\n\t\tvalue,\n\t}, null];\n}\n\nfunction parseValueItem(name: string, op: DeltaOperator, value: string): [(DeltaItem & { name: string }) | null, DeltaError] {\n\tlet type: DeltaType;\n\tlet num = Number(value);\n\tif (!Number.isInteger(num)) {\n\t\treturn [null, `Item [${name}]: invalid quantity \"${value}`];\n\t}\n\tswitch (op) {\n\t\tcase \"+\": type = \"add\"; break;\n\t\tcase \"-\": type = \"add\"; num = -num; break;\n\t\tcase \"=\": type = \"set\"; break;\n\t\tdefault: return [null, `Item [${name}]: unknown operator \"${op}\"`];\n\t}\n\treturn [{\n\t\tname,\n\t\ttype,\n\t\tvalue: num,\n\t}, null];\n}","import clsx from \"clsx\";\nimport { Bounds } from \"util/layout\";\n\ntype Props = {\n\tlayout: Bounds,\n\tborderClass?: string,\n}\n\nconst Box: React.FunctionComponent<Props> = ({ layout, children, borderClass }) => {\n\treturn (\n\t\t<div className={clsx(\"component\", borderClass)}\n\t\t\tstyle={{\n\t\t\t\tposition: \"absolute\",\n\t\t\t\ttop: layout.y,\n\t\t\t\tleft: layout.x,\n\t\t\t\twidth: layout.w,\n\t\t\t\theight: layout.h\n\t\t\t}}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Box;","type Props = {\n\texpanded: boolean,\n\tsetExpanded: (expanded: boolean) => void,\n}\n\nconst ExpandButton: React.FunctionComponent<Props> = ({ expanded, setExpanded }: Props) => {\n\treturn (\n\t\t<button className=\"icon-button\" onClick={() => setExpanded(!expanded)}>{expanded ? \"-\" : \"+\"}</button>\n\t);\n};\n\nexport default ExpandButton;","import { RouteAction } from \"data/action\";\nimport { RouteBranch } from \"data/branch\";\nimport { DeltaString, DeltaError, ActionDelta } from \"data/delta\";\nimport { RouteItem } from \"data/item\";\nimport { RouteState } from \"./type\";\nimport { RouteSplit } from \"data/split\";\nimport { ReduxGlobalState } from \"store/store\";\n\nexport function getRouteState(state: ReduxGlobalState): RouteState {\n\treturn state.routeState;\n}\n\nexport function getProjectName(state: ReduxGlobalState): string {\n\treturn getRouteState(state).projectName;\n}\n\nexport function getActiveBranch(state: ReduxGlobalState): number {\n\treturn getRouteState(state).activeBranch;\n}\n\nexport function getActiveSplit(state: ReduxGlobalState): number {\n\treturn getRouteState(state).activeSplit;\n}\n\nexport function getActiveGlobalIndex(state: ReduxGlobalState): number | undefined {\n\tconst branch = getActiveBranch(state);\n\tconst split = getActiveSplit(state);\n\tconst action = getActiveAction(state);\n\tif (branch >= 0 && split >= 0 && action >= 0) {\n\t\treturn getGlobalActionIndex(state, branch, split, action);\n\t}\n\treturn undefined;\n}\n\nfunction getActiveRouteSplit(state: ReduxGlobalState): RouteSplit | undefined {\n\tconst b = getActiveBranch(state);\n\tconst s = getActiveSplit(state);\n\tif (b >= 0 && s >= 0) {\n\t\treturn getSplit(state, b, s);\n\t}\n\treturn undefined;\n}\n\nexport function getActiveSplitName(state: ReduxGlobalState): string | undefined {\n\treturn getActiveRouteSplit(state)?.name;\n}\n\nfunction getActiveSplitActions(state: ReduxGlobalState): RouteAction[] | undefined {\n\treturn getActiveRouteSplit(state)?.actions;\n}\n\nexport function getActiveSplitActionCount(state: ReduxGlobalState): number | undefined {\n\treturn getActiveSplitActions(state)?.length;\n}\n\nfunction getActiveSplitAction(state: ReduxGlobalState, actionIndex: number): RouteAction | undefined {\n\tconst actions = getActiveSplitActions(state);\n\treturn actions === undefined ? undefined : actions[actionIndex];\n}\n\nexport function getActiveSplitActionName(state: ReduxGlobalState, actionIndex: number): string | undefined {\n\treturn getActiveSplitAction(state, actionIndex)?.name;\n}\n\nexport function isActiveSplitActionExpanded(state: ReduxGlobalState, actionIndex: number): boolean | undefined {\n\treturn getActiveSplitAction(state, actionIndex)?.expanded;\n}\n\nexport function getActiveSplitActionDeltaString(state: ReduxGlobalState, actionIndex: number): DeltaString | undefined {\n\treturn getActiveSplitAction(state, actionIndex)?.deltaString;\n}\n\nexport function getActiveSplitActionDeltaError(state: ReduxGlobalState, actionIndex: number): DeltaError | undefined {\n\tconst error = getActiveSplitAction(state, actionIndex)?.deltaError;\n\treturn error ? error : undefined;\n}\n\nexport function getActiveSplitActionDeltas(state: ReduxGlobalState, actionIndex: number): ActionDelta | undefined {\n\tconst deltas = getActiveSplitAction(state, actionIndex)?.deltas;\n\treturn deltas ? deltas : undefined;\n}\n\nexport function getActiveAction(state: ReduxGlobalState): number {\n\treturn getRouteState(state).activeAction;\n}\n\nexport function getActiveActionName(state: ReduxGlobalState): string | undefined {\n\tconst activeAction = getActiveAction(state);\n\tif (activeAction < 0) {\n\t\treturn undefined;\n\t}\n\tconst action = getActiveSplitAction(state, activeAction);\n\treturn action?.name;\n}\n\nfunction getBranches(state: ReduxGlobalState): RouteBranch[] {\n\treturn getRouteState(state).branches;\n}\n\nfunction getBranch(state: ReduxGlobalState, branchIndex: number): RouteBranch {\n\treturn getBranches(state)[branchIndex];\n}\n\nexport function getBranchCount(state: ReduxGlobalState): number {\n\treturn getBranches(state).length;\n}\n\nexport function getBranchName(state: ReduxGlobalState, branchIndex: number): string {\n\treturn getBranch(state, branchIndex).name;\n}\n\nexport function isBranchExpanded(state: ReduxGlobalState, branchIndex: number): boolean {\n\treturn getBranch(state, branchIndex).expanded;\n}\n\nfunction getSplits(state: ReduxGlobalState, branchIndex: number): RouteSplit[] {\n\treturn getBranch(state, branchIndex).splits;\n}\n\nexport function getSplit(state: ReduxGlobalState, branchIndex: number, splitIndex: number): RouteSplit {\n\treturn getSplits(state, branchIndex)[splitIndex];\n}\n\nexport function getSplitCount(state: ReduxGlobalState, branchIndex: number): number {\n\treturn getSplits(state, branchIndex).length;\n}\n\nexport function getSplitName(state: ReduxGlobalState, branchIndex: number, splitIndex: number): string {\n\treturn getSplit(state, branchIndex, splitIndex).name;\n}\n\nexport function isSplitExpanded(state: ReduxGlobalState, branchIndex: number, splitIndex: number): boolean {\n\treturn getSplit(state, branchIndex, splitIndex).expanded;\n}\n\nfunction getActions(state: ReduxGlobalState, branchIndex: number, splitIndex: number): RouteAction[] {\n\treturn getSplit(state, branchIndex, splitIndex).actions;\n}\n\nfunction getAction(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): RouteAction {\n\treturn getActions(state, branchIndex, splitIndex)[actionIndex];\n}\n\nexport function getActionCount(state: ReduxGlobalState, branchIndex: number, splitIndex: number): number {\n\treturn getActions(state, branchIndex, splitIndex).length;\n}\n\nexport function isActionNote(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): boolean {\n\treturn getAction(state, branchIndex, splitIndex, actionIndex).deltaString === \"\";\n}\n\nexport function getActionName(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): string {\n\treturn getAction(state, branchIndex, splitIndex, actionIndex).name;\n}\n\nexport function getActionDeltas(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): ActionDelta | null {\n\treturn getAction(state, branchIndex, splitIndex, actionIndex).deltas;\n}\n\nexport function getActionDeltaError(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): DeltaError {\n\treturn getAction(state, branchIndex, splitIndex, actionIndex).deltaError;\n}\n\nexport function getActionDeltaString(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): string {\n\treturn getAction(state, branchIndex, splitIndex, actionIndex).deltaString;\n}\n\nexport function getGlobalActionIndex(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): number {\n\tlet i = 0;\n\tfor (let b = 0; b < branchIndex; b++) {\n\t\tconst splitCount = getSplitCount(state, b);\n\t\tfor (let s = 0; s < splitCount; s++) {\n\t\t\ti += getActionCount(state, b, s);\n\t\t}\n\t}\n\tfor (let s = 0; s < splitIndex; s++) {\n\t\ti += getActionCount(state, branchIndex, s);\n\t}\n\treturn i + actionIndex;\n}\n\nexport function getTotalActionCount(state: ReduxGlobalState): number {\n\tlet i = 0;\n\tgetBranches(state).forEach(branch => {\n\t\tbranch.splits.forEach(split => {\n\t\t\ti += split.actions.length;\n\t\t});\n\t});\n\treturn i;\n}\n\nexport function getActionIndexFromGlobal(state: ReduxGlobalState, globalIndex: number): [number, number, number] {\n\tlet i = globalIndex;\n\tfor (let b = 0; b < getBranchCount(state); b++) {\n\t\tfor (let s = 0; s < getSplitCount(state, b); s++) {\n\t\t\tconst actionCount = getActionCount(state, b, s);\n\t\t\tif (i < actionCount) {\n\t\t\t\treturn [b, s, i];\n\t\t\t}\n\t\t\ti -= actionCount;\n\t\t}\n\t}\n\treturn [-1, -1, -1];\n}\n\nfunction getItems(state: ReduxGlobalState): RouteItem[] {\n\treturn getRouteState(state).items;\n}\n\nfunction getItemByName(state: ReduxGlobalState, name: string): RouteItem | undefined {\n\tconst match = getItems(state).filter(item => item.name === name);\n\tif (match.length === 0) {\n\t\treturn undefined;\n\t}\n\treturn match[0];\n}\n\nexport function getItemColorByName(state: ReduxGlobalState, name: string): string | undefined {\n\treturn getItemByName(state, name)?.color;\n}\n\nexport function getFilteredItemIndices(state: ReduxGlobalState, filter: string[]): number[] {\n\tif (filter.length === 0) {\n\t\treturn getItems(state).map((_, i) => i);\n\t}\n\tconst lowerCaseFilter = filter.map(s => s.toLowerCase());\n\tconst indices: number[] = [];\n\tgetItems(state).forEach((item, itemIndex) => {\n\t\tfor (let i = 0; i < lowerCaseFilter.length; i++) {\n\t\t\tif (item.name.toLowerCase().includes(lowerCaseFilter[i])) {\n\t\t\t\tindices.push(itemIndex);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\treturn indices;\n}\n\nexport function getItemNameByIndex(state: ReduxGlobalState, i: number): string {\n\treturn getItems(state)[i].name;\n}\n\nexport function getItemColorByIndex(state: ReduxGlobalState, i: number): string {\n\treturn getItems(state)[i].color;\n}\n\nexport function getItemCount(state: ReduxGlobalState): number {\n\treturn getItems(state).length;\n}\n\nexport function getInvalidItemNamesIn(state: ReduxGlobalState, names: string[]): string[] {\n\tconst validNames = getItems(state).map(item => item.name).sort();\n\tnames.sort();\n\tlet i = 0;\n\tlet j = 0;\n\tconst invalidNames = [];\n\twhile (i < validNames.length && j < names.length) {\n\t\tif (names[j] < validNames[i]) {\n\t\t\tinvalidNames.push(names[j]);\n\t\t\tj++;\n\t\t} else if (names[j] > validNames[i]) {\n\t\t\ti++;\n\t\t} else {\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t}\n\tfor (; j < names.length; j++) {\n\t\tinvalidNames.push(names[j]);\n\t}\n\treturn invalidNames;\n}\n\n","import { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetActionCount,\n\tgetActionName,\n\tisActionNote\n} from \"store/routing/selectors\";\nimport { ReduxGlobalState } from \"store/store\";\n\ntype RenderExternalProps = {\n\tbranchIndex: number,\n\tsplitIndex: number,\n\tactionIndex: number,\n}\nconst mapStateToPropsForActionSummaryItemRender = (state: ReduxGlobalState, ownProps: RenderExternalProps) => ({\n\tisNote: isActionNote(state, ownProps.branchIndex, ownProps.splitIndex, ownProps.actionIndex),\n\tname: getActionName(state, ownProps.branchIndex, ownProps.splitIndex, ownProps.actionIndex),\n});\n\nconst renderConnector = connect(mapStateToPropsForActionSummaryItemRender);\n\ntype RenderProps = ConnectedProps<typeof renderConnector> & RenderExternalProps;\n\nconst ActionSummaryItemRender: React.FunctionComponent<RenderProps> = ({ isNote, name }: RenderProps) => {\n\tconst displayName = name || \"[Unnamed Action]\";\n\treturn <tr>\n\t\t<td />\n\t\t<td />\n\t\t<td className=\"icon-button-width\" >&gt;</td>\n\t\t<td colSpan={8} >\n\t\t\t{isNote ? <em>{displayName}</em> : displayName}\n\t\t</td>\n\t</tr>;\n};\n\nconst ActionSummaryItem = connect(mapStateToPropsForActionSummaryItemRender)(ActionSummaryItemRender);\n\ntype ExternalProps = {\n\tbranchIndex: number,\n\tsplitIndex: number,\n}\nconst mapStateToProps = (state: ReduxGlobalState, ownProps: ExternalProps) => ({\n\tlength: getActionCount(state, ownProps.branchIndex, ownProps.splitIndex),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const ActionSummary: React.FunctionComponent<Props> = ({ length, branchIndex, splitIndex }: Props) => {\n\tconst nodes = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tnodes.push(<ActionSummaryItem\n\t\t\tkey={i}\n\t\t\tbranchIndex={branchIndex}\n\t\t\tsplitIndex={splitIndex}\n\t\t\tactionIndex={i}\n\t\t/>);\n\t}\n\treturn <>{nodes}</>;\n};\n\nexport default connector(ActionSummary);","import { Layout, Bounds } from \"util/layout\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { ApplicationState } from \"./type\";\nimport { RouteSplit } from \"data/split\";\nimport { ActionResource, ResourceError, RouteResources } from \"data/resource\";\nimport { getGlobalActionIndex } from \"store/routing/selectors\";\n\nfunction getApplicationState(state: ReduxGlobalState): ApplicationState {\n\treturn state.applicationState;\n}\n\nexport function getInfo(state: ReduxGlobalState): string {\n\treturn getApplicationState(state).info;\n}\n\nexport function isSideSectionShrunk(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).shrinkSide;\n}\n\nexport function isResourcesSectionCollapsed(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).resourcesCollapsed;\n}\n\nexport function isHeaderCollapsed(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).headerCollapsed;\n}\n\nexport function isSideSectionCollapsed(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).sideCollapsed;\n}\n\nfunction getLayout(state: ReduxGlobalState): Layout {\n\treturn getApplicationState(state).layout;\n}\n\nexport function getHeaderBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).header;\n}\n\nexport function getSideBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).side;\n}\n\nexport function getSideHeaderBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).side.header;\n}\n\nexport function getSideMainBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).side.main;\n}\n\nexport function getActionsBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).actions;\n}\n\nexport function getActionsHeaderBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).actions.header;\n}\n\nexport function getActionsMainBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).actions.main;\n}\n\nexport function getFooterBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).footer;\n}\n\nexport function getResourcesBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).resources;\n}\n\nexport function getResourcesHeaderBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).resources.header;\n}\n\nexport function getResourcesMainBounds(state: ReduxGlobalState): Bounds {\n\treturn getLayout(state).resources.main;\n}\n\nexport function isEditingNav(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).editingNav;\n}\n\nexport function isEditingActions(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).editingActions;\n}\n\nexport function isEditingItems(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).editingItems;\n}\n\nexport function getSplitClipboard(state: ReduxGlobalState): RouteSplit | undefined {\n\treturn getApplicationState(state).splitClipboard;\n}\n\nfunction getRouteResources(state: ReduxGlobalState): RouteResources {\n\treturn getApplicationState(state).resources;\n}\n\nexport function getResourceCalcProgress(state: ReduxGlobalState): number {\n\treturn getRouteResources(state).progress;\n}\n\nexport function getResourceCalcError(state: ReduxGlobalState): ResourceError {\n\treturn getRouteResources(state).error;\n}\n\nexport function getActionResourceByGlobalIndex(state: ReduxGlobalState, globalIndex: number): ActionResource | undefined {\n\treturn getRouteResources(state).content[globalIndex];\n}\n\nexport function getActionResource(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): ActionResource | undefined {\n\treturn getActionResourceByGlobalIndex(state, getGlobalActionIndex(state, branchIndex, splitIndex, actionIndex));\n}\n\nexport function isOnlyShowingChangedResources(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).showOnlyChangedResources;\n}\n\nexport function isShowingHelp(state: ReduxGlobalState): boolean {\n\treturn getApplicationState(state).showHelp;\n}","export const BRANCH_LIMIT = 64;\nexport const SPLIT_LIMIT = 128;\nexport const ACTION_LIMIT = 32;\nexport const ITEM_LIMIT = 512;","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { newAction } from \"data/action\";\nimport { newBranch } from \"data/branch\";\nimport { deleteItemInDelta, deltaToString, renameItemInDelta, stringToDelta } from \"data/delta\";\nimport { newItem } from \"data/item\";\nimport { ACTION_LIMIT, BRANCH_LIMIT, ITEM_LIMIT, SPLIT_LIMIT } from \"data/limit\";\nimport { cloneSplit, newSplit, RouteSplit } from \"data/split\";\nimport { ReduxGlobalState } from \"store/store\";\nimport {\n\tgetActionCount,\n\tgetActionDeltas,\n\tgetActionDeltaString,\n\tgetActiveAction,\n\tgetActiveBranch,\n\tgetActiveSplit,\n\tgetBranchCount,\n\tgetInvalidItemNamesIn,\n\tgetItemCount,\n\tgetSplitCount\n} from \"./selectors\";\nimport { RouteState } from \"./type\";\n\nfunction validateBranch(state: ReduxGlobalState, branchIndex: number): boolean {\n\tconst branchLength = getBranchCount(state);\n\treturn branchIndex >= 0 && branchIndex < branchLength;\n}\n\nfunction validateSplit(state: ReduxGlobalState, branchIndex: number, splitIndex: number): boolean {\n\tif (!validateBranch(state, branchIndex)) {\n\t\treturn false;\n\t}\n\treturn splitIndex >= 0 && splitIndex < getSplitCount(state, branchIndex);\n}\n\nfunction validateItem(state: ReduxGlobalState, index: number): boolean {\n\treturn index >= 0 && index < getItemCount(state);\n}\n\nfunction validateAction(state: ReduxGlobalState, branchIndex: number, splitIndex: number, actionIndex: number): boolean {\n\tif (!validateSplit(state, branchIndex, splitIndex)) {\n\t\treturn false;\n\t}\n\treturn actionIndex >= 0 && actionIndex < getActionCount(state, branchIndex, splitIndex);\n}\n\nfunction parseDeltaString(state: ReduxGlobalState, deltaString: string, branchIndex: number, splitIndex: number, actionIndex: number): void {\n\tconst [delta, error] = stringToDelta(deltaString);\n\tif (error) {\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltaError = error;\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltas = null;\n\t} else {\n\t\tif (delta !== null) {\n\t\t\tconst names = Object.keys(delta);\n\t\t\tconst invalidNames = getInvalidItemNamesIn(state, names);\n\t\t\tif (invalidNames.length > 0) {\n\t\t\t\tconst message = `Undefined item(s): ${invalidNames.join(\", \")}`;\n\t\t\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltaError = message;\n\t\t\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltas = null;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltaError = null;\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltas = delta;\n\t}\n}\n\nexport default {\n\tsetRouteState(state: ReduxGlobalState, action: PayloadAction<{ routeState: RouteState }>): void {\n\t\tstate.routeState = action.payload.routeState;\n\t},\n\tsetProjectName(state: ReduxGlobalState, action: PayloadAction<{ projectName: string }>): void {\n\t\tstate.routeState.projectName = action.payload.projectName;\n\t},\n\tsetActiveBranchAndSplit(state: ReduxGlobalState, action: PayloadAction<{ activeBranch: number, activeSplit: number }>): void {\n\t\tstate.routeState.activeBranch = action.payload.activeBranch;\n\t\tstate.routeState.activeSplit = action.payload.activeSplit;\n\t\tstate.routeState.activeAction = -1;\n\t},\n\tsetActiveAction(state: ReduxGlobalState, action: PayloadAction<{ activeAction: number }>): void {\n\t\tstate.routeState.activeAction = action.payload.activeAction;\n\t},\n\tcreateBranch(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number }>): void {\n\t\tconst { branchIndex } = action.payload;\n\t\tconst branchLength = getBranchCount(state);\n\t\tif (branchLength >= BRANCH_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tconst branch = newBranch();\n\t\tif (!validateBranch(state, branchIndex)) {\n\t\t\tstate.routeState.branches.push(branch);\n\t\t} else {\n\t\t\tstate.routeState.branches.splice(branchIndex, 0, branch);\n\t\t\tconst activeBranch = getActiveBranch(state);\n\t\t\tif (activeBranch >= branchIndex) {\n\t\t\t\tstate.routeState.activeBranch = activeBranch + 1;\n\t\t\t}\n\t\t}\n\t},\n\tsetBranchName(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, name: string }>): void {\n\t\tconst { branchIndex, name } = action.payload;\n\t\tstate.routeState.branches[branchIndex].name = name;\n\t},\n\tsetBranchExpanded(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, expanded: boolean }>): void {\n\t\tconst { branchIndex, expanded } = action.payload;\n\t\tstate.routeState.branches[branchIndex].expanded = expanded;\n\t},\n\tdeleteBranch(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number }>): void {\n\t\tconst { branchIndex } = action.payload;\n\t\tstate.routeState.branches.splice(branchIndex, 1);\n\t\tconst activeBranch = getActiveBranch(state);\n\t\tif (activeBranch === branchIndex) {\n\t\t\tstate.routeState.activeBranch = -1;\n\t\t} else if (activeBranch > branchIndex) {\n\t\t\tstate.routeState.activeBranch = activeBranch - 1;\n\t\t}\n\t},\n\tswapBranches(state: ReduxGlobalState, action: PayloadAction<{ i: number, j: number }>): void {\n\t\tconst { i, j } = action.payload;\n\t\tif (!validateBranch(state, i) || !validateBranch(state, j)) {\n\t\t\treturn;\n\t\t}\n\t\tconst temp = state.routeState.branches[i];\n\t\tstate.routeState.branches[i] = state.routeState.branches[j];\n\t\tstate.routeState.branches[j] = temp;\n\t\tconst activeBranch = getActiveBranch(state);\n\t\tif (activeBranch === i) {\n\t\t\tstate.routeState.activeBranch = j;\n\t\t} else if (activeBranch === j) {\n\t\t\tstate.routeState.activeBranch = i;\n\t\t}\n\t},\n\tmergeNextIntoBranch(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number }>): void {\n\t\tconst { branchIndex } = action.payload;\n\t\tconst branchLength = getBranchCount(state);\n\t\tif (branchIndex === branchLength - 1 || !validateBranch(state, branchIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tconst oldSplitSize = getSplitCount(state, branchIndex);\n\t\tconst nextSplitSize = getSplitCount(state, branchIndex + 1);\n\t\tif (oldSplitSize + nextSplitSize >= SPLIT_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tstate.routeState.branches[branchIndex].splits = state.routeState.branches[branchIndex].splits.concat(state.routeState.branches[branchIndex + 1].splits);\n\t\tstate.routeState.branches.splice(branchIndex + 1, 1);\n\t\tconst activeBranch = getActiveBranch(state);\n\t\tif (activeBranch === branchIndex + 1) {\n\t\t\tstate.routeState.activeBranch = activeBranch - 1;\n\t\t\tstate.routeState.activeSplit += oldSplitSize;\n\t\t}\n\t},\n\tbreakBranchAt(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, splitIndex: number }>): void {\n\t\tconst branchLength = getBranchCount(state);\n\t\tif (branchLength >= BRANCH_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tconst { branchIndex, splitIndex } = action.payload;\n\t\tif (!validateSplit(state, branchIndex, splitIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tconst hiSplits = state.routeState.branches[branchIndex].splits.slice(splitIndex);\n\t\tstate.routeState.branches[branchIndex].splits = state.routeState.branches[branchIndex].splits.slice(0, splitIndex);\n\t\tconst branch = newBranch();\n\t\tbranch.expanded = true;\n\t\tbranch.splits = hiSplits;\n\t\tstate.routeState.branches.splice(branchIndex + 1, 0, branch);\n\t\tconst activeBranch = getActiveBranch(state);\n\t\tconst activeSplit = getActiveSplit(state);\n\t\tif (activeBranch === branchIndex && activeSplit >= splitIndex) {\n\t\t\tstate.routeState.activeBranch = activeBranch + 1;\n\t\t\tstate.routeState.activeSplit -= splitIndex;\n\t\t}\n\t},\n\tcreateSplit(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, splitIndex: number, templateSplit?: RouteSplit }>): void {\n\t\tconst { branchIndex, splitIndex, templateSplit } = action.payload;\n\t\tif (!validateBranch(state, branchIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tconst splitLength = getSplitCount(state, branchIndex);\n\t\tif (splitLength >= SPLIT_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tconst split = templateSplit ? cloneSplit(templateSplit) : newSplit();\n\t\tif (!validateSplit(state, branchIndex, splitIndex)) {\n\t\t\tstate.routeState.branches[branchIndex].splits.push(split);\n\t\t} else {\n\t\t\tstate.routeState.branches[branchIndex].splits.splice(splitIndex, 0, split);\n\t\t\tif (getActiveBranch(state) === branchIndex) {\n\t\t\t\tconst activeSplit = getActiveSplit(state);\n\t\t\t\tif (activeSplit >= splitIndex) {\n\t\t\t\t\tstate.routeState.activeSplit = activeSplit + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsetSplitName(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, splitIndex: number, name: string }>): void {\n\t\tconst { branchIndex, splitIndex, name } = action.payload;\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].name = name;\n\t},\n\tsetSplitExpanded(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, splitIndex: number, expanded: boolean }>): void {\n\t\tconst { branchIndex, splitIndex, expanded } = action.payload;\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].expanded = expanded;\n\t},\n\tdeleteSplit(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, splitIndex: number }>): void {\n\t\tconst { branchIndex, splitIndex } = action.payload;\n\t\tif (!validateSplit(state, branchIndex, splitIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tstate.routeState.branches[branchIndex].splits.splice(splitIndex, 1);\n\t\tif (getActiveBranch(state) === branchIndex) {\n\t\t\tconst activeSplit = getActiveSplit(state);\n\t\t\tif (activeSplit === splitIndex) {\n\t\t\t\tstate.routeState.activeSplit = -1;\n\t\t\t} else if (activeSplit > splitIndex) {\n\t\t\t\tstate.routeState.activeSplit = activeSplit - 1;\n\t\t\t}\n\t\t}\n\t},\n\tswapSplits(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number, i: number, j: number }>): void {\n\t\tconst { branchIndex, i, j } = action.payload;\n\t\tif (!validateSplit(state, branchIndex, i) || !validateSplit(state, branchIndex, j)) {\n\t\t\treturn;\n\t\t}\n\t\tconst temp = state.routeState.branches[branchIndex].splits[i];\n\t\tstate.routeState.branches[branchIndex].splits[i] = state.routeState.branches[branchIndex].splits[j];\n\t\tstate.routeState.branches[branchIndex].splits[j] = temp;\n\t\tif (getActiveBranch(state) === branchIndex) {\n\t\t\tconst activeSplit = getActiveSplit(state);\n\t\t\tif (activeSplit === i) {\n\t\t\t\tstate.routeState.activeSplit = j;\n\t\t\t} else if (activeSplit === j) {\n\t\t\t\tstate.routeState.activeSplit = i;\n\t\t\t}\n\t\t}\n\t},\n\tmoveFirstSplitToPreviousBranch(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number }>): void {\n\t\tconst { branchIndex } = action.payload;\n\t\tif (!validateBranch(state, branchIndex) || !validateBranch(state, branchIndex - 1)) {\n\t\t\treturn;\n\t\t}\n\t\tif (getSplitCount(state, branchIndex) <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst movedSplitIndex = getSplitCount(state, branchIndex - 1);\n\t\tstate.routeState.branches[branchIndex - 1].splits.push(state.routeState.branches[branchIndex].splits[0]);\n\t\tstate.routeState.branches[branchIndex].splits.splice(0, 1);\n\t\tif (getActiveBranch(state) === branchIndex) {\n\t\t\tif (getActiveSplit(state) === 0) {\n\t\t\t\tstate.routeState.activeBranch = branchIndex - 1;\n\t\t\t\tstate.routeState.activeSplit = movedSplitIndex;\n\t\t\t} else {\n\t\t\t\tstate.routeState.activeSplit -= 1;\n\t\t\t}\n\t\t}\n\t},\n\tmoveLastSplitToNextBranch(state: ReduxGlobalState, action: PayloadAction<{ branchIndex: number }>): void {\n\t\tconst { branchIndex } = action.payload;\n\t\tif (!validateBranch(state, branchIndex) || !validateBranch(state, branchIndex + 1)) {\n\t\t\treturn;\n\t\t}\n\t\tif (getSplitCount(state, branchIndex) <= 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst beforeMoveIndex = getSplitCount(state, branchIndex) - 1;\n\t\tstate.routeState.branches[branchIndex + 1].splits.splice(0, 0, state.routeState.branches[branchIndex].splits[beforeMoveIndex]);\n\t\tstate.routeState.branches[branchIndex].splits.pop();\n\t\tif (getActiveBranch(state) === branchIndex) {\n\t\t\tif (getActiveSplit(state) === beforeMoveIndex) {\n\t\t\t\tstate.routeState.activeBranch = branchIndex + 1;\n\t\t\t\tstate.routeState.activeSplit = 0;\n\t\t\t}\n\t\t} else if (getActiveBranch(state) === branchIndex + 1) {\n\t\t\tstate.routeState.activeSplit += 1;\n\t\t}\n\t},\n\tcreateItem(state: ReduxGlobalState, action: PayloadAction<{ index: number }>): void {\n\t\tconst { index } = action.payload;\n\t\tconst item = newItem();\n\t\tconst itemLength = getItemCount(state);\n\t\tif (itemLength >= ITEM_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tif (!validateItem(state, index)) {\n\t\t\tstate.routeState.items.push(item);\n\t\t} else {\n\t\t\tstate.routeState.items.splice(index, 0, item);\n\t\t}\n\t},\n\tsetItemName(state: ReduxGlobalState, action: PayloadAction<{ index: number, name: string }>): void {\n\t\tconst { index, name } = action.payload;\n\t\tconst oldName = state.routeState.items[index].name;\n\t\tstate.routeState.items[index].name = name;\n\t\tfor (let b = 0; b < getBranchCount(state); b++) {\n\t\t\tfor (let s = 0; s < getSplitCount(state, b); s++) {\n\t\t\t\tfor (let a = 0; a < getActionCount(state, b, s); a++) {\n\t\t\t\t\tconst deltas = getActionDeltas(state, b, s, a);\n\t\t\t\t\tif (deltas !== null) {\n\t\t\t\t\t\trenameItemInDelta(deltas, oldName, name);\n\t\t\t\t\t\tstate.routeState.branches[b].splits[s].actions[a].deltaString = deltaToString(deltas);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsetItemColor(state: ReduxGlobalState, action: PayloadAction<{ index: number, color: string }>): void {\n\t\tconst { index, color } = action.payload;\n\t\tstate.routeState.items[index].color = color;\n\t},\n\tswapItems(state: ReduxGlobalState, action: PayloadAction<{ i: number, j: number }>): void {\n\t\tconst { i, j } = action.payload;\n\t\tif (!validateItem(state, i) || !validateItem(state, j)) {\n\t\t\treturn;\n\t\t}\n\t\tconst temp = state.routeState.items[i];\n\t\tstate.routeState.items[i] = state.routeState.items[j];\n\t\tstate.routeState.items[j] = temp;\n\t},\n\tdeleteItem(state: ReduxGlobalState, action: PayloadAction<{ index: number }>): void {\n\t\tconst { index } = action.payload;\n\t\tlet name: string;\n\t\tif (!validateItem(state, index)) {\n\t\t\tconst item = state.routeState.items.pop();\n\t\t\tif (item === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tname = item.name;\n\t\t} else {\n\t\t\tconst item = state.routeState.items[index];\n\t\t\tstate.routeState.items.splice(index, 1);\n\t\t\tname = item.name;\n\t\t}\n\t\tfor (let b = 0; b < getBranchCount(state); b++) {\n\t\t\tfor (let s = 0; s < getSplitCount(state, b); s++) {\n\t\t\t\tfor (let a = 0; a < getActionCount(state, b, s); a++) {\n\t\t\t\t\tconst deltas = getActionDeltas(state, b, s, a);\n\t\t\t\t\tif (deltas !== null) {\n\t\t\t\t\t\tdeleteItemInDelta(deltas, name);\n\t\t\t\t\t\tconst deltaString = deltaToString(deltas);\n\t\t\t\t\t\tstate.routeState.branches[b].splits[s].actions[a].deltaString = deltaString;\n\t\t\t\t\t\tif (deltaString === \"\" &&\n\t\t\t\t\t\t\tgetActiveBranch(state) === b &&\n\t\t\t\t\t\t\tgetActiveSplit(state) === s &&\n\t\t\t\t\t\t\tgetActiveAction(state) === a) {\n\t\t\t\t\t\t\tstate.routeState.activeAction = -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcreateAction(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, actionIndex: number }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { actionIndex } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\t\tif (!validateSplit(state, branchIndex, splitIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tconst actionCount = getActionCount(state, branchIndex, splitIndex);\n\t\tif (actionCount >= ACTION_LIMIT) {\n\t\t\treturn;\n\t\t}\n\t\tconst routeAction = newAction();\n\t\tif (!validateAction(state, branchIndex, splitIndex, actionIndex)) {\n\t\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions.push(routeAction);\n\t\t} else {\n\t\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions.splice(actionIndex, 0, routeAction);\n\t\t\tconst activeBranch = getActiveBranch(state);\n\t\t\tconst activeSplit = getActiveSplit(state);\n\t\t\tif (activeBranch === branchIndex && activeSplit === splitIndex) {\n\t\t\t\tconst activeAction = getActiveAction(state);\n\t\t\t\tif (activeAction >= actionIndex) {\n\t\t\t\t\tstate.routeState.activeAction += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tsetActionName(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, actionIndex: number, name: string }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { actionIndex, name } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\t\tif (!validateAction(state, branchIndex, splitIndex, actionIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].name = name;\n\t},\n\tsetActionExpanded(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, actionIndex: number, expanded: boolean }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { actionIndex, expanded } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\t\tif (!validateAction(state, branchIndex, splitIndex, actionIndex)) {\n\t\t\treturn;\n\t\t}\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].expanded = expanded;\n\t},\n\tsetActionDeltaString(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, actionIndex: number, deltaString: string }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { actionIndex, deltaString } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\n\t\tif (!validateAction(state, branchIndex, splitIndex, actionIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (deltaString === \"\" &&\n\t\t\tgetActiveBranch(state) === branchIndex &&\n\t\t\tgetActiveSplit(state) === splitIndex &&\n\t\t\tgetActiveAction(state) === actionIndex) {\n\t\t\tstate.routeState.activeAction = -1;\n\t\t}\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].expanded = true;\n\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[actionIndex].deltaString = deltaString;\n\t\tparseDeltaString(state, deltaString, branchIndex, splitIndex, actionIndex);\n\n\t},\n\tdeleteAction(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, actionIndex: number }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { actionIndex } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\n\t\tif (!validateAction(state, branchIndex, splitIndex, actionIndex)) {\n\t\t\treturn;\n\t\t}\n\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions.splice(actionIndex, 1);\n\t\tif (getActiveBranch(state) === branchIndex && getActiveSplit(state) === splitIndex) {\n\t\t\tconst activeAction = getActiveAction(state);\n\t\t\tif (activeAction === actionIndex) {\n\t\t\t\tstate.routeState.activeAction = -1;\n\t\t\t} else if (activeAction > actionIndex) {\n\t\t\t\tstate.routeState.activeAction -= 1;\n\t\t\t}\n\t\t}\n\t},\n\tswapActions(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number, i: number, j: number }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tconst { i, j } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\n\t\tif (!validateAction(state, branchIndex, splitIndex, i) || !validateAction(state, branchIndex, splitIndex, j)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst temp = state.routeState.branches[branchIndex].splits[splitIndex].actions[i];\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[i] = state.routeState.branches[branchIndex].splits[splitIndex].actions[j];\n\t\tstate.routeState.branches[branchIndex].splits[splitIndex].actions[j] = temp;\n\t\tif (getActiveBranch(state) === branchIndex && getActiveSplit(state) === splitIndex) {\n\t\t\tconst activeAction = getActiveAction(state);\n\t\t\tif (activeAction === i) {\n\t\t\t\tstate.routeState.activeAction = j;\n\t\t\t} else if (activeAction === j) {\n\t\t\t\tstate.routeState.activeAction = i;\n\t\t\t}\n\t\t}\n\t},\n\treparseAllDeltaStrings(state: ReduxGlobalState): void {\n\t\tfor (let b = 0; b < getBranchCount(state); b++) {\n\t\t\tfor (let s = 0; s < getSplitCount(state, b); s++) {\n\t\t\t\tfor (let a = 0; a < getActionCount(state, b, s); a++) {\n\t\t\t\t\tparseDeltaString(state, getActionDeltaString(state, b, s, a), b, s, a);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tchangeActiveSplit(state: ReduxGlobalState, action: PayloadAction<{ changeBy: number }>): void {\n\t\tconst activeBranch = getActiveBranch(state);\n\t\tconst activeSplit = getActiveSplit(state);\n\t\tif (activeBranch < 0 || activeSplit < 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet current = 0;\n\t\tfor (let b = 0; b < activeBranch; b++) {\n\t\t\tcurrent += getSplitCount(state, b);\n\t\t}\n\t\tcurrent += activeSplit;\n\t\tlet changed = current + action.payload.changeBy;\n\t\tlet changedBranch = -1;\n\t\tlet changedSplit = -1;\n\t\tfor (let b = 0; b < getBranchCount(state); b++) {\n\t\t\tconst splitCount = getSplitCount(state, b);\n\t\t\tif (changed < splitCount) {\n\t\t\t\tchangedBranch = b;\n\t\t\t\tchangedSplit = changed;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tchanged -= splitCount;\n\t\t\t}\n\t\t}\n\n\t\tstate.routeState.activeBranch = changedBranch;\n\t\tstate.routeState.activeSplit = changedSplit;\n\t\tstate.routeState.activeAction = -1;\n\t}\n};","export function calc(...array: string[]): string {\n\treturn `calc(${array.join(\" \")})`;\n}\n\nexport function min(a: string, b: string): string {\n\treturn `min(${a}, ${b})`;\n}\n\nexport function max(a: string, b: string): string {\n\treturn `max(${a}, ${b})`;\n}\n\nexport const defaultLayout: Bounds = {\n\tx: \"0\",\n\ty: \"0\",\n\tw: \"0\",\n\th: \"0\",\n};\nexport type Layout = {\n\theader: Bounds,\n\tside: Bounds & {\n\t\theader: Bounds,\n\t\tmain: Bounds,\n\t},\n\tfooter: Bounds,\n\tresources: Bounds & {\n\t\theader: Bounds,\n\t\tmain: Bounds,\n\t},\n\tactions: Bounds & {\n\t\theader: Bounds,\n\t\tmain: Bounds,\n\t},\n\t//map: Bounds\n}\n\nexport type Bounds = {\n\tx: string,\n\ty: string,\n\tw: string,\n\th: string,\n}\n\nexport type LayoutOption = {\n\tsideCollapsed: boolean,\n\tresourcesCollapsed: boolean,\n\theaderCollapsed: boolean,\n\tshrink: boolean,\n}\n\nexport default function layout({ sideCollapsed, resourcesCollapsed, headerCollapsed, shrink }: LayoutOption): Layout {\n\n\tconst windowWidth = \"100vw\";\n\tconst windowHeight = \"100vh\";\n\tconst HEADER_HEIGHT = \"3.5rem\";\n\tconst HEADER_EXPAND_HEIGHT = \"10rem\";\n\tconst FOOTER_HEIGHT = \"1.5rem\";\n\n\tconst SIDE_MIN_WIDTH = \"16rem\";\n\tconst SIDE_WIDTH = \"30%\";\n\tconst SIDE_MAX_WIDTH = \"24rem\";\n\n\tconst SIDE_COLLAPSE_WIDTH = \"2rem\";\n\n\tconst SIDE_HEADER_HEIGHT = \"2rem\";\n\n\tconst RESOURCE_MIN_HEIGHT = \"12rem\";\n\tconst RESOURCE_HEIGHT = \"30%\";\n\t// const RESOURCE_WIDTH_SHRINK = \"24rem\";\n\tconst RESOURCE_COLLAPSE_HEIGHT = \"1.8rem\";\n\tconst RESOURCE_HEADER_HEIGHT = \"3.2rem\";\n\n\t// const ACTION_MIN_WIDTH = \"50rem\";\n\n\tconst headerHeight = headerCollapsed ? HEADER_HEIGHT : HEADER_EXPAND_HEIGHT;\n\tconst sideHeight = calc(windowHeight, \"-\", headerHeight, \"-\", FOOTER_HEIGHT);\n\tconst sideWidth = sideCollapsed ? SIDE_COLLAPSE_WIDTH : max(SIDE_MIN_WIDTH, min(SIDE_MAX_WIDTH, SIDE_WIDTH));\n\tconst mainWidth = calc(windowWidth, \"-\", sideWidth);\n\tconst resourceHeight = resourcesCollapsed ? RESOURCE_COLLAPSE_HEIGHT : max(RESOURCE_MIN_HEIGHT, RESOURCE_HEIGHT);\n\n\tconst actionHeight = calc(windowHeight, \"-\", resourceHeight, \"-\", FOOTER_HEIGHT);\n\t//const actionWidth = shrink ? calc(windowWidth, \"-\", RESOURCE_WIDTH_SHRINK) : min(mainWidth, max(ACTION_MIN_WIDTH, calc(\"60%\", \"-\", sideWidth)));\n\tconst resourceY = calc(windowHeight, \"-\", FOOTER_HEIGHT, \"-\", resourceHeight);\n\n\treturn {\n\t\theader: {\n\t\t\tx: \"0\",\n\t\t\ty: \"0\",\n\t\t\tw: sideWidth,\n\t\t\th: headerHeight,\n\t\t},\n\t\tside: {\n\t\t\tx: \"0\",\n\t\t\ty: headerHeight,\n\t\t\tw: sideWidth,\n\t\t\th: shrink ? calc(sideHeight, \"-\", resourceHeight) : sideHeight,\n\t\t\theader: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: \"0\",\n\t\t\t\tw: \"100%\",\n\t\t\t\th: SIDE_HEADER_HEIGHT,\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: SIDE_HEADER_HEIGHT,\n\t\t\t\tw: \"100%\",\n\t\t\t\th: calc(\"100%\", \"-\", SIDE_HEADER_HEIGHT),\n\t\t\t},\n\t\t},\n\t\tfooter: {\n\t\t\tx: \"0\",\n\t\t\ty: calc(windowHeight, \"-\", FOOTER_HEIGHT),\n\t\t\tw: windowWidth,\n\t\t\th: FOOTER_HEIGHT,\n\t\t},\n\t\tresources: {\n\t\t\tx: shrink ? \"0\" : sideWidth,\n\t\t\ty: resourceY,\n\t\t\tw: shrink ? windowWidth : mainWidth,\n\t\t\th: resourceHeight,\n\t\t\t// hide: noResources,\n\t\t\theader: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: \"0\",\n\t\t\t\tw: \"100%\",\n\t\t\t\th: RESOURCE_HEADER_HEIGHT,\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: RESOURCE_HEADER_HEIGHT,\n\t\t\t\tw: \"100%\",\n\t\t\t\th: calc(\"100%\", \"-\", RESOURCE_HEADER_HEIGHT),\n\t\t\t},\n\t\t},\n\t\tactions: {\n\t\t\tx: sideWidth,\n\t\t\ty: \"0\",\n\t\t\tw: mainWidth,\n\t\t\th: actionHeight,\n\t\t\theader: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: \"0\",\n\t\t\t\tw: \"100%\",\n\t\t\t\th: SIDE_HEADER_HEIGHT,\n\t\t\t},\n\t\t\tmain: {\n\t\t\t\tx: \"0\",\n\t\t\t\ty: SIDE_HEADER_HEIGHT,\n\t\t\t\tw: \"100%\",\n\t\t\t\th: calc(\"100%\", \"-\", SIDE_HEADER_HEIGHT),\n\t\t\t},\n\t\t},\n\t};\n\n}\n\n","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport layout, { LayoutOption } from \"util/layout\";\nimport { ReduxGlobalState } from \"store/store\";\nimport {\n\tisSideSectionShrunk,\n\tisHeaderCollapsed,\n\tisSideSectionCollapsed,\n\tisResourcesSectionCollapsed,\n\tgetResourceCalcProgress,\n\tgetResourceCalcError\n} from \"./selectors\";\nimport { RouteSplit } from \"data/split\";\nimport { getActiveBranch, getActiveSplit, getGlobalActionIndex } from \"store/routing/selectors\";\nimport { ActionResource, ResourceError } from \"data/resource\";\n\nfunction layoutOption(state: ReduxGlobalState): LayoutOption {\n\treturn {\n\t\tsideCollapsed: isSideSectionCollapsed(state),\n\t\tresourcesCollapsed: isResourcesSectionCollapsed(state),\n\t\theaderCollapsed: isHeaderCollapsed(state),\n\t\tshrink: isSideSectionShrunk(state),\n\t};\n}\n\nfunction markResourceDirty(state: ReduxGlobalState, globalIndex: number): void {\n\tconst currentProgress = getResourceCalcProgress(state);\n\tif (currentProgress >= 0 && currentProgress < globalIndex) {\n\t\treturn;\n\t}\n\tstate.applicationState.resources.progress = globalIndex;\n\tconst error = getResourceCalcError(state);\n\tif (error !== null) {\n\t\tconst { branch, split, action } = error;\n\t\tconst errorGlobalIndex = getGlobalActionIndex(state, branch, split, action);\n\t\tif (errorGlobalIndex >= globalIndex) {\n\t\t\tstate.applicationState.resources.error = null;\n\t\t}\n\t}\n}\n\nconst SHRINK_SIDE_WHEN_LESS_THAN = 1000;\n\nexport default {\n\tsetWindowWidth(state: ReduxGlobalState, action: PayloadAction<{ width: number }>): void {\n\n\t\tconst shrink = action.payload.width < SHRINK_SIDE_WHEN_LESS_THAN;\n\t\t// const noResources = action.payload.width < HIDE_RESOURCES_WHEN_LESS_THAN;\n\t\tconst shouldUpdate = isSideSectionShrunk(state) !== shrink;\n\t\tif (shouldUpdate) {\n\t\t\tstate.applicationState.layout = layout({ ...layoutOption(state), shrink });\n\t\t\tstate.applicationState.shrinkSide = shrink;\n\t\t\t//state.applicationState.noResources = noResources;\n\t\t}\n\t},\n\tdoLayout(state: ReduxGlobalState): void {\n\t\tconst shrink = window.innerWidth < SHRINK_SIDE_WHEN_LESS_THAN;\n\t\t// const noResources = window.innerWidth < HIDE_RESOURCES_WHEN_LESS_THAN;\n\t\tstate.applicationState.layout = layout({ ...layoutOption(state), shrink });\n\t\tstate.applicationState.shrinkSide = shrink;\n\t\t//state.applicationState.noResources = noResources;\n\t},\n\tsetHeaderCollapsed(state: ReduxGlobalState, action: PayloadAction<{ collapsed: boolean }>): void {\n\t\tconst headerCollapsed = action.payload.collapsed;\n\t\tif (headerCollapsed !== isHeaderCollapsed(state)) {\n\t\t\tstate.applicationState.headerCollapsed = headerCollapsed;\n\t\t\tstate.applicationState.layout = layout({ ...layoutOption(state), headerCollapsed });\n\t\t}\n\t},\n\tsetSideCollapsed(state: ReduxGlobalState, action: PayloadAction<{ collapsed: boolean }>): void {\n\t\tconst sideCollapsed = action.payload.collapsed;\n\t\tif (sideCollapsed !== isSideSectionCollapsed(state)) {\n\t\t\tstate.applicationState.sideCollapsed = sideCollapsed;\n\t\t\tstate.applicationState.layout = layout({ ...layoutOption(state), sideCollapsed });\n\t\t}\n\t},\n\tsetResourcesCollapsed(state: ReduxGlobalState, action: PayloadAction<{ collapsed: boolean }>): void {\n\t\tconst resourcesCollapsed = action.payload.collapsed;\n\t\tif (resourcesCollapsed !== isResourcesSectionCollapsed(state)) {\n\t\t\tstate.applicationState.resourcesCollapsed = resourcesCollapsed;\n\t\t\tstate.applicationState.layout = layout({ ...layoutOption(state), resourcesCollapsed });\n\t\t}\n\t},\n\tsetEditingNav(state: ReduxGlobalState, action: PayloadAction<{ editing: boolean }>): void {\n\t\tstate.applicationState.editingNav = action.payload.editing;\n\t},\n\tsetEditingActions(state: ReduxGlobalState, action: PayloadAction<{ editing: boolean }>): void {\n\t\tstate.applicationState.editingActions = action.payload.editing;\n\t},\n\tsetEditingItems(state: ReduxGlobalState, action: PayloadAction<{ editing: boolean }>): void {\n\t\tstate.applicationState.editingItems = action.payload.editing;\n\t},\n\tsetInfo(state: ReduxGlobalState, action: PayloadAction<{ info: string }>): void {\n\t\tstate.applicationState.info = action.payload.info;\n\t},\n\tsetSplitClipboard(state: ReduxGlobalState, action: PayloadAction<{ split: RouteSplit }>): void {\n\t\tstate.applicationState.splitClipboard = action.payload.split;\n\t},\n\tsetResourceContent(state: ReduxGlobalState, action: PayloadAction<{ globalIndex: number, content: ActionResource }>): void {\n\t\tconst { globalIndex, content } = action.payload;\n\t\tstate.applicationState.resources.content[globalIndex] = content;\n\t\tstate.applicationState.resources.progress = globalIndex + 1;\n\t},\n\tsetResourceError(state: ReduxGlobalState, action: PayloadAction<{ error: ResourceError }>): void {\n\t\tstate.applicationState.resources.error = action.payload.error;\n\t},\n\tmarkResourceDirtyAt(state: ReduxGlobalState, action: PayloadAction<{ globalIndex: number }>): void {\n\t\tconst { globalIndex } = action.payload;\n\t\tmarkResourceDirty(state, globalIndex);\n\t},\n\tmarkResourceDirtyAtSplit(state: ReduxGlobalState, action: PayloadAction<{ branchIndex?: number, splitIndex?: number }>): void {\n\t\tlet { branchIndex, splitIndex } = action.payload;\n\t\tbranchIndex = branchIndex ?? getActiveBranch(state);\n\t\tsplitIndex = splitIndex ?? getActiveSplit(state);\n\n\t\tconst globalIndex = getGlobalActionIndex(state, branchIndex, splitIndex, 0);\n\t\tmarkResourceDirty(state, globalIndex);\n\t},\n\tsetShowOnlyChangedResources(state: ReduxGlobalState, action: PayloadAction<{ showOnlyChangedResources: boolean }>): void {\n\t\tstate.applicationState.showOnlyChangedResources = action.payload.showOnlyChangedResources;\n\t},\n\tsetShowingHelp(state: ReduxGlobalState, action: PayloadAction<{ showHelp: boolean }>): void {\n\t\tstate.applicationState.showHelp = action.payload.showHelp;\n\t}\n};","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { RouteState } from \"store/routing/type\";\nimport routingReducers from \"store/routing/reducers\";\nimport applicationReducers from \"store/application/reducers\";\nimport settingReducers from \"store/setting/reducers\";\nimport testInitialState from \"store/initial\";\nimport { SettingState } from \"store/setting/type\";\nimport { ApplicationState } from \"store/application/type\";\n\nexport type ReduxGlobalState = {\n\trouteState: RouteState,\n\tsettingState: SettingState,\n\tapplicationState: ApplicationState,\n};\n\nconst initialState = testInitialState as ReduxGlobalState;\n\nconst slice = createSlice({\n\tname: \"state\",\n\tinitialState,\n\treducers: {\n\t\t...routingReducers,\n\t\t...applicationReducers,\n\t\t...settingReducers,\n\t},\n});\n\nexport const actions = slice.actions;\n\nconst store = configureStore({\n\treducer: slice.reducer\n});\n\nexport default store;\n","import { defaultLayout } from \"util/layout\";\nexport default {\n\trouteState: {\n\t\tprojectName: \"Unnamed Project\",\n\t\tactiveBranch: -1,\n\t\tactiveSplit: -1,\n\t\tactiveAction: -1,\n\t\tbranches: [],\n\t\titems: [],\n\t},\n\tsettingState: {\n\t\tautoSave: true,\n\t\tonlyShowChangedItems: false,\n\t\titemFilter: \"\",\n\t},\n\tapplicationState: {\n\t\tlayout: {\n\t\t\theader: defaultLayout,\n\t\t\tside: {\n\t\t\t\t...defaultLayout,\n\t\t\t\tmain: defaultLayout,\n\t\t\t\theader: defaultLayout\n\t\t\t},\n\t\t\tfooter: defaultLayout,\n\t\t\tresources: {\n\t\t\t\t...defaultLayout,\n\t\t\t\theader: defaultLayout,\n\t\t\t\tmain: defaultLayout,\n\t\t\t},\n\t\t\tactions: {\n\t\t\t\t...defaultLayout,\n\t\t\t\theader: defaultLayout,\n\t\t\t\tmain: defaultLayout,\n\t\t\t},\n\t\t\tmap: defaultLayout\n\t\t},\n\t\tsideCollapsed: false,\n\t\theaderCollapsed: true,\n\t\tresourcesCollapsed: false,\n\t\tnoResources: false,\n\t\tshrinkSide: false,\n\t\teditingNav: false,\n\t\teditingActions: false,\n\t\teditingItems: false,\n\t\tinfo: \"\",\n\t\tsplitClipboard: undefined,\n\t\tresources: {\n\t\t\terror: null,\n\t\t\tcontent: [],\n\t\t\tprogress: -1,\n\t\t},\n\t\tshowOnlyChangedResources: false,\n\t\tshowHelp: false,\n\t}\n};","import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { SettingState } from \"./type\";\n\nexport default {\n\tsetSettingState(state: ReduxGlobalState, action: PayloadAction<{ settingState: SettingState }>): void {\n\t\tstate.settingState = action.payload.settingState;\n\t},\n\tsetItemFilter(state: ReduxGlobalState, action: PayloadAction<{ filter: string }>): void {\n\t\tstate.settingState.itemFilter = action.payload.filter;\n\t},\n\tsetAutoSaveEnabled(state: ReduxGlobalState, action: PayloadAction<{ enabled: boolean }>): void {\n\t\tstate.settingState.autoSave = action.payload.enabled;\n\t}\n};","import { actions } from \"store/store\";\n\nexport const {\n\tsetRouteState,\n\tsetActiveBranchAndSplit,\n\tsetActiveAction,\n\tcreateBranch,\n\tsetBranchName,\n\tsetBranchExpanded,\n\tdeleteBranch,\n\tswapBranches,\n\tmergeNextIntoBranch,\n\tbreakBranchAt,\n\tcreateSplit,\n\tsetSplitName,\n\tsetSplitExpanded,\n\tdeleteSplit,\n\tswapSplits,\n\tmoveFirstSplitToPreviousBranch,\n\tmoveLastSplitToNextBranch,\n\tcreateItem,\n\tsetItemName,\n\tsetItemColor,\n\tswapItems,\n\tdeleteItem,\n\tcreateAction,\n\tsetActionName,\n\tsetActionExpanded,\n\tdeleteAction,\n\tswapActions,\n\tsetActionDeltaString,\n\tsetProjectName,\n\treparseAllDeltaStrings,\n\tchangeActiveSplit,\n} = actions;\n","import { actions } from \"store/store\";\n\nexport const {\n\tsetWindowWidth,\n\tdoLayout,\n\tsetHeaderCollapsed,\n\tsetSideCollapsed,\n\tsetResourcesCollapsed,\n\tsetEditingNav,\n\tsetEditingActions,\n\tsetEditingItems,\n\tsetInfo,\n\tsetSplitClipboard,\n\tsetResourceContent,\n\tsetResourceError,\n\tmarkResourceDirtyAt,\n\tmarkResourceDirtyAtSplit,\n\tsetShowOnlyChangedResources,\n\tsetShowingHelp,\n} = actions;","export type millisecond = number;\n\nexport function benchStart(): millisecond {\n\treturn new Date().getTime();\n}\n\nexport function benchEnd(start: millisecond): millisecond {\n\treturn new Date().getTime() - start;\n}","import { connect, ConnectedProps } from \"react-redux\";\nimport ActionSummary from \"components/action/ActionSummary\";\nimport ExpandButton from \"components/ExpandButton\";\nimport {\n\tgetBranchCount,\n\tgetSplitCount,\n\tgetSplitName,\n\tisSplitExpanded,\n\tgetSplit,\n} from \"store/routing/selectors\";\nimport { isEditingNav } from \"store/application/selectors\";\nimport {\n\tsetSplitExpanded,\n\tsetSplitName,\n\tdeleteSplit,\n\tbreakBranchAt,\n\tcreateSplit,\n\tswapSplits,\n\tmoveFirstSplitToPreviousBranch,\n\tmoveLastSplitToNextBranch,\n\tsetActiveBranchAndSplit,\n} from \"store/routing/actions\";\nimport {\n\tsetInfo,\n\tsetSplitClipboard,\n\tsetEditingActions,\n\tsetEditingNav,\n\tmarkResourceDirtyAtSplit,\n\tsetShowingHelp,\n} from \"store/application/actions\";\nimport { getSplitClipboard } from \"store/application/selectors\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { benchStart, benchEnd } from \"util/benchmark\";\nimport { SPLIT_LIMIT } from \"data/limit\";\nimport { AppAction } from \"App\";\nimport { RouteSplit } from \"data/split\";\nimport { ReduxGlobalState } from \"store/store\";\n\ntype ExternalProps = {\n\tbranchIndex: number,\n\tsplitIndex: number,\n\tappActions: AppAction,\n}\nconst mapStateToProps = (state: ReduxGlobalState, { branchIndex, splitIndex }: ExternalProps) => ({\n\tname: getSplitName(state, branchIndex, splitIndex),\n\texpanded: isSplitExpanded(state, branchIndex, splitIndex),\n\tisLastBranch: getBranchCount(state) === branchIndex + 1,\n\tediting: isEditingNav(state),\n\tcopiedSplit: getSplitClipboard(state),\n\tsplitToCopy: getSplit(state, branchIndex, splitIndex),\n\tsplitCount: getSplitCount(state, branchIndex),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetSplitExpanded,\n\t\tsetSplitName,\n\t\tbreakBranchAt,\n\t\tsetInfo,\n\t\tdeleteSplit,\n\t\tcreateSplit,\n\t\tsetSplitClipboard,\n\t\tswapSplits,\n\t\tmoveFirstSplitToPreviousBranch,\n\t\tmoveLastSplitToNextBranch,\n\t\tsetActiveBranchAndSplit,\n\t\tsetEditingActions,\n\t\tmarkResourceDirtyAtSplit,\n\t\tsetShowingHelp,\n\t\tsetEditingNav,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const Split: React.FunctionComponent<Props> = ({\n\tbranchIndex, splitIndex, name, expanded, isLastBranch, editing, actions, appActions, copiedSplit, splitToCopy, splitCount,\n}: Props) => {\n\tconst isLast = splitIndex === splitCount - 1;\n\tconst isFirstBranch = branchIndex === 0;\n\tconst isFirst = splitIndex === 0;\n\tconst displayName = name || \"[Unnamed Split]\";\n\tconst expandButtonCell =\n\t\t<td className=\"icon-button-width\">\n\t\t\t<ExpandButton expanded={expanded} setExpanded={(expanded: boolean) => {\n\t\t\t\tactions.setSplitExpanded({ branchIndex, splitIndex, expanded });\n\t\t\t}} />\n\t\t</td>;\n\tconst handleCreateSplit = (templateSplit?: RouteSplit) => {\n\t\tif (splitCount >= SPLIT_LIMIT) {\n\t\t\tconst message = `You have reached the maximum number of splits per branch (${SPLIT_LIMIT})`;\n\t\t\tappActions.showAlert(message, undefined);\n\t\t\tactions.setInfo({ info: message });\n\t\t} else {\n\t\t\tconst startTime = benchStart();\n\t\t\tactions.createSplit({\n\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\tsplitIndex: splitIndex + 1,\n\t\t\t\ttemplateSplit: templateSplit,\n\t\t\t});\n\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\tsplitIndex: splitIndex,\n\t\t\t});\n\t\t\tactions.setEditingNav({ editing: true });\n\t\t\tactions.setInfo({ info: `Split created. (${benchEnd(startTime)} ms)` });\n\t\t}\n\t};\n\tlet splitNode;\n\tif (editing) {\n\t\tsplitNode =\n\t\t\t<tr>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"Break branch\" onClick={() => {\n\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\tactions.breakBranchAt({ branchIndex, splitIndex });\n\t\t\t\t\t\tactions.setInfo({ info: `Branch broken. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t}}>{\"/\"}</button>\n\t\t\t\t</td>\n\t\t\t\t<td colSpan={4}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\t\tplaceholder=\"Split Name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tactions.setSplitName({ branchIndex, splitIndex, name: e.target.value });\n\t\t\t\t\t\t}} />\n\t\t\t\t</td>\n\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!(isFirst && isFirstBranch) &&\n\t\t\t\t\t\t<button className=\"icon-button\" disabled={isFirst && isFirstBranch} title=\"Move up\" onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tif (isFirst) {\n\t\t\t\t\t\t\t\tactions.moveFirstSplitToPreviousBranch({ branchIndex });\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Split moved into previous branch. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tactions.swapSplits({ branchIndex, i: splitIndex, j: splitIndex - 1 });\n\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\t\t\t\t\t\tsplitIndex: splitIndex - 1,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Split moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}} >&uarr;</button>\n\t\t\t\t\t}\n\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!(isLast && isLastBranch) &&\n\t\t\t\t\t\t<button className=\"icon-button\" title=\"Move down\" disabled={isLast && isLastBranch} onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tif (isLast) {\n\t\t\t\t\t\t\t\tactions.moveLastSplitToNextBranch({ branchIndex });\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Split moved into next branch. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tactions.swapSplits({ branchIndex, i: splitIndex, j: splitIndex + 1 });\n\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\t\t\t\t\t\tsplitIndex: splitIndex,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Split moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}} >&darr;</button>\n\t\t\t\t\t}\n\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"Copy\" onClick={() => {\n\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\tactions.setSplitClipboard({ split: splitToCopy });\n\t\t\t\t\t\tactions.setInfo({ info: `Split copied. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t}} >c</button>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{copiedSplit !== undefined &&\n\t\t\t\t\t\t<button className=\"icon-button\" title=\"Paste Split Below\" disabled={copiedSplit === undefined} onClick={() => {\n\t\t\t\t\t\t\thandleCreateSplit(copiedSplit);\n\t\t\t\t\t\t}} >p</button>\n\t\t\t\t\t}\n\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"Delete\" onClick={() => {\n\t\t\t\t\t\tappActions.showAlert(\n\t\t\t\t\t\t\t`Delete split \"${name}\"? All actions inside this split will also be deleted. This is NOT reversible!`,\n\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"Delete\",\n\t\t\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\t\tactions.deleteSplit({ branchIndex, splitIndex });\n\t\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\t\t\t\t\t\t\tsplitIndex: splitIndex,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tactions.setInfo({ info: `Split deleted. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t);\n\t\t\t\t\t}}>X</button>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"New Split Below\" onClick={() => {\n\t\t\t\t\t\thandleCreateSplit(undefined);\n\t\t\t\t\t}}>*</button>\n\t\t\t\t</td>\n\t\t\t</tr>;\n\t} else {\n\t\tsplitNode =\n\t\t\t<tr>\n\t\t\t\t<td className=\"icon-button-width\" />\n\t\t\t\t{expandButtonCell}\n\t\t\t\t<td colSpan={9}>\n\t\t\t\t\t<u className=\"split-link\" onClick={() => {\n\t\t\t\t\t\tactions.setActiveBranchAndSplit({\n\t\t\t\t\t\t\tactiveBranch: branchIndex,\n\t\t\t\t\t\t\tactiveSplit: splitIndex,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tactions.setEditingActions({ editing: false });\n\t\t\t\t\t\tactions.setShowingHelp({ showHelp: false });\n\t\t\t\t\t}}>{displayName}</u>\n\t\t\t\t</td>\n\t\t\t</tr>;\n\t}\n\tif (!expanded || editing) {\n\t\treturn splitNode;\n\t}\n\n\treturn <>{splitNode}<ActionSummary branchIndex={branchIndex} splitIndex={splitIndex} /></>;\n};\n\nexport default connector(Split);","import { connect, ConnectedProps } from \"react-redux\";\nimport Split from \"./Split\";\n// import { createSplitAt, mergeNextBranchWithCurrentBranch } from \"../../data\";\nimport {\n\tgetBranchCount,\n\tgetBranchName,\n\tgetSplitCount\n} from \"store/routing/selectors\";\nimport { getSplitClipboard, isEditingNav } from \"store/application/selectors\";\nimport {\n\tcreateSplit,\n\tmergeNextIntoBranch,\n} from \"store/routing/actions\";\nimport {\n\tsetInfo,\n\tmarkResourceDirtyAtSplit,\n\tsetEditingNav,\n} from \"store/application/actions\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { benchEnd, benchStart } from \"util/benchmark\";\nimport { SPLIT_LIMIT } from \"data/limit\";\nimport { RouteSplit } from \"data/split\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\n\ntype ExternalProps = {\n\tbranchIndex: number,\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, { branchIndex }: ExternalProps) => ({\n\tlength: getSplitCount(state, branchIndex),\n\tediting: isEditingNav(state),\n\tisLastBranch: getBranchCount(state) === branchIndex + 1,\n\tcurrentBranchName: getBranchName(state, branchIndex),\n\tnextBranchName: branchIndex === getBranchCount(state) - 1 ? undefined : getBranchName(state, branchIndex + 1),\n\tcopiedSplit: getSplitClipboard(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tcreateSplit,\n\t\tsetInfo,\n\t\tmergeNextIntoBranch,\n\t\tmarkResourceDirtyAtSplit,\n\t\tsetEditingNav,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const SplitList: React.FunctionComponent<Props> = ({\n\tbranchIndex, isLastBranch, length, editing, copiedSplit, currentBranchName, nextBranchName, actions, appActions\n}: Props) => {\n\tconst splitNodes = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tsplitNodes.push(<Split\n\t\t\tkey={`split_${i}_`}\n\t\t\tbranchIndex={branchIndex}\n\t\t\tsplitIndex={i}\n\t\t\tappActions={appActions}\n\t\t/>);\n\t}\n\tconst handleCreateSplit = (templateSplit?: RouteSplit) => {\n\t\tif (length >= SPLIT_LIMIT) {\n\t\t\tconst message = `You have reached the maximum number of splits per branch (${SPLIT_LIMIT})`;\n\t\t\tappActions.showAlert(message);\n\t\t\tactions.setInfo({ info: message });\n\t\t} else {\n\t\t\tconst startTime = benchStart();\n\t\t\tactions.createSplit({\n\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\tsplitIndex: length,\n\t\t\t\ttemplateSplit: templateSplit,\n\t\t\t});\n\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\tbranchIndex: branchIndex,\n\t\t\t\tsplitIndex: length,\n\t\t\t});\n\t\t\tactions.setEditingNav({ editing: true });\n\t\t\tactions.setInfo({ info: `Split created. (${benchEnd(startTime)} ms)` });\n\t\t}\n\t};\n\treturn <>\n\t\t{splitNodes}\n\t\t<tr>\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t{editing && !isLastBranch &&\n\t\t\t\t\t<button className=\"icon-button\" title=\"Merge branch\" disabled={isLastBranch} onClick={() => {\n\t\t\t\t\t\tappActions.showAlert(\n\t\t\t\t\t\t\t`Merge branch \"${nextBranchName}\" into \"${currentBranchName}\"?`,\n\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"Merge\",\n\t\t\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\t\tactions.mergeNextIntoBranch({ branchIndex });\n\t\t\t\t\t\t\t\t\tactions.setInfo({ info: `Branch merged. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t);\n\t\t\t\t\t}}>^</button>\n\t\t\t\t}\n\t\t\t</td>\n\t\t\t<td colSpan={10}>\n\t\t\t\t<button onClick={() => {\n\t\t\t\t\thandleCreateSplit(undefined);\n\t\t\t\t}}>New Split</button>\n\t\t\t\t<button className=\"space-left-small\" disabled={copiedSplit === undefined} onClick={() => {\n\t\t\t\t\thandleCreateSplit(copiedSplit);\n\t\t\t\t}}>Paste Split</button>\n\t\t\t</td>\n\t\t</tr>\n\t</>;\n};\n\nexport default connector(SplitList);","import { connect, ConnectedProps } from \"react-redux\";\nimport ExpandButton from \"../ExpandButton\";\nimport SplitList from \"components/split/SplitList\";\nimport {\n\tisBranchExpanded,\n\tgetBranchName,\n\tgetBranchCount\n} from \"store/routing/selectors\";\nimport {\n\tcreateBranch,\n\tsetBranchName,\n\tsetBranchExpanded,\n\tdeleteBranch,\n\tswapBranches,\n} from \"store/routing/actions\";\nimport { isEditingNav } from \"store/application/selectors\";\nimport {\n\tsetInfo,\n\tsetEditingNav,\n\tmarkResourceDirtyAtSplit,\n} from \"store/application/actions\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { benchEnd, benchStart } from \"util/benchmark\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { BRANCH_LIMIT } from \"data/limit\";\n\ntype ExternalProps = {\n\tindex: number,\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, { index }: ExternalProps) => ({\n\tname: getBranchName(state, index),\n\texpanded: isBranchExpanded(state, index),\n\tediting: isEditingNav(state),\n\tbranchCount: getBranchCount(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tcreateBranch,\n\t\tsetBranchName,\n\t\tsetBranchExpanded,\n\t\tdeleteBranch,\n\t\tsetInfo,\n\t\tswapBranches,\n\t\tsetEditingNav,\n\t\tmarkResourceDirtyAtSplit,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const Branch: React.FunctionComponent<Props> = ({ index, name, expanded, editing, actions, branchCount, appActions }: Props) => {\n\tconst displayName = name || \"[Unnamed Branch]\";\n\tconst isFirst = index === 0;\n\tconst isLast = index === branchCount - 1;\n\tconst expandButtonCell =\n\t\t<td className=\"icon-button-width\">\n\t\t\t<ExpandButton expanded={expanded} setExpanded={(expanded) => {\n\t\t\t\tactions.setBranchExpanded({ branchIndex: index, expanded });\n\t\t\t}} />\n\t\t</td>;\n\tlet branchNode;\n\tif (editing && !expanded) {\n\t\tbranchNode =\n\t\t\t<tr>\n\t\t\t\t{expandButtonCell}\n\t\t\t\t<td colSpan={6}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\t\tplaceholder=\"Branch Name\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tactions.setBranchName({ branchIndex: index, name: e.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!isFirst &&\n\t\t\t\t\t\t<button className=\"icon-button\" title=\"Move up\" disabled={isFirst} onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.swapBranches({ i: index, j: index - 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\tbranchIndex: index - 1,\n\t\t\t\t\t\t\t\tsplitIndex: 0,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tactions.setInfo({ info: `Branch moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}}>&uarr;</button>\n\t\t\t\t\t}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!isLast &&\n\t\t\t\t\t\t<button className=\"icon-button\" title=\"Move down\" disabled={isLast} onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.swapBranches({ i: index, j: index + 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\tbranchIndex: index,\n\t\t\t\t\t\t\t\tsplitIndex: 0,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tactions.setInfo({ info: `Branch moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}}>&darr;</button>\n\t\t\t\t\t}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"Delete\" onClick={() => {\n\t\t\t\t\t\tappActions.showAlert(\n\t\t\t\t\t\t\t`Delete branch \"${name}\"? All splits inside this branch will also be deleted. This is NOT reversible!`,\n\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"Delete\",\n\t\t\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\t\tactions.deleteBranch({ branchIndex: index });\n\t\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\t\t\tbranchIndex: index,\n\t\t\t\t\t\t\t\t\t\tsplitIndex: 0,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tactions.setInfo({ info: `Branch deleted. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t);\n\t\t\t\t\t}}>X</button>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"New Branch Below\" onClick={() => {\n\t\t\t\t\t\tif (branchCount >= BRANCH_LIMIT) {\n\t\t\t\t\t\t\tconst message = `You have reached the maximum number of branches (${BRANCH_LIMIT})`;\n\t\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.createBranch({ branchIndex: index + 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\tbranchIndex: index + 1,\n\t\t\t\t\t\t\t\tsplitIndex: 0,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tactions.setEditingNav({ editing: true });\n\t\t\t\t\t\t\tactions.setInfo({ info: `Branch created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>*</button>\n\t\t\t\t</td>\n\t\t\t</tr>;\n\t} else {\n\t\tbranchNode =\n\t\t\t<tr>\n\t\t\t\t{expandButtonCell}\n\t\t\t\t<td colSpan={10}>\n\t\t\t\t\t<strong>{displayName}</strong> {editing && <em>collapse to edit</em>}\n\t\t\t\t</td>\n\t\t\t</tr>;\n\t}\n\tif (!expanded) {\n\t\treturn branchNode;\n\t}\n\treturn <>\n\t\t{branchNode}\n\t\t<SplitList\n\t\t\tbranchIndex={index}\n\t\t\tappActions={appActions}\n\t\t/>\n\t</>;\n\n};\n\nexport default connector(Branch);","import { connect, ConnectedProps } from \"react-redux\";\nimport Branch from \"./Branch\";\n\nimport {\n\tgetBranchCount\n} from \"store/routing/selectors\";\nimport {\n\tcreateBranch\n} from \"store/routing/actions\";\nimport {\n\tsetEditingNav,\n\tsetInfo,\n\tmarkResourceDirtyAtSplit,\n} from \"store/application/actions\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { BRANCH_LIMIT } from \"data/limit\";\nimport { benchStart, benchEnd } from \"util/benchmark\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\tlength: getBranchCount(state)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tcreateBranch,\n\t\tsetEditingNav,\n\t\tsetInfo,\n\t\tmarkResourceDirtyAtSplit,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const BranchList: React.FunctionComponent<Props> = ({ length, actions, appActions }: Props) => {\n\t// if (length === 0) {\n\t// \treturn null;\n\t// }\n\tconst branchNodes = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tbranchNodes.push(<Branch\n\t\t\tindex={i}\n\t\t\tkey={i}\n\t\t\tappActions={appActions}\n\t\t/>);\n\t}\n\treturn (\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t{branchNodes}\n\t\t\t\t<tr key=\"new_branch_button\">\n\t\t\t\t\t<td colSpan={11}>\n\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\tif (length >= BRANCH_LIMIT) {\n\t\t\t\t\t\t\t\tconst message = `You have reached the maximum number of branches (${BRANCH_LIMIT})`;\n\t\t\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\tactions.createBranch({ branchIndex: length });\n\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({\n\t\t\t\t\t\t\t\t\tbranchIndex: length,\n\t\t\t\t\t\t\t\t\tsplitIndex: 0,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tactions.setEditingNav({ editing: true });\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Branch created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>New Branch</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\n\t\t\t</tbody>\n\n\t\t</table>\n\t);\n};\n\nexport default connector(BranchList);","import Box from \"components/Box\";\nimport BranchList from \"components/branch/BranchList\";\nimport ExpandButton from \"components/ExpandButton\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetSideHeaderBounds,\n\tgetSideMainBounds,\n\tisEditingNav,\n\tisSideSectionCollapsed\n} from \"store/application/selectors\";\nimport {\n\tsetSideCollapsed,\n\tsetEditingNav\n} from \"store/application/actions\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\tsideHeaderBounds: getSideHeaderBounds(state),\n\tsideMainBounds: getSideMainBounds(state),\n\tsideCollapsed: isSideSectionCollapsed(state),\n\tediting: isEditingNav(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetSideCollapsed,\n\t\tsetEditingNav\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const SideNav: React.FunctionComponent<Props> = ({\n\tsideHeaderBounds,\n\tsideMainBounds,\n\tsideCollapsed,\n\tactions,\n\tappActions,\n\tediting,\n}: Props) => {\n\tconst buttonSection =\n\t\t<span>\n\t\t\t<button className=\"space-left-small\" onClick={() => actions.setEditingNav({ editing: !editing })} >{editing ? \"Finish\" : \"Edit\"}</button>\n\t\t\t<button className=\"space-left-small\" disabled >Collapse All</button>\n\t\t</span>;\n\n\treturn (\n\t\t<div>\n\t\t\t<Box layout={sideMainBounds} borderClass=\"overflow-auto\">\n\t\t\t\t<div>\n\t\t\t\t\t{!sideCollapsed && <BranchList appActions={appActions} />}\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t\t<Box layout={sideHeaderBounds} >\n\t\t\t\t<div>\n\t\t\t\t\t<ExpandButton expanded={!sideCollapsed} setExpanded={(expanded) => {\n\t\t\t\t\t\tactions.setSideCollapsed({ collapsed: !expanded });\n\t\t\t\t\t}} />\n\t\t\t\t\t{!sideCollapsed && buttonSection}\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default connector(SideNav);","import { ReduxGlobalState } from \"store/store\";\nimport { SettingState } from \"./type\";\n\nexport function getSettingState(state: ReduxGlobalState): SettingState {\n\treturn state.settingState;\n}\n\nexport function isAutoSaveEnabled(state: ReduxGlobalState): boolean {\n\treturn getSettingState(state).autoSave;\n}\nexport function shouldOnlyShowChangedItem(state: ReduxGlobalState): boolean {\n\treturn getSettingState(state).onlyShowChangedItems;\n}\n\nexport function getItemFilter(state: ReduxGlobalState): string {\n\treturn getSettingState(state).itemFilter;\n}\n","import { actions } from \"store/store\";\n\nexport const {\n\tsetItemFilter,\n\tsetSettingState,\n\tsetAutoSaveEnabled,\n} = actions;","import { connect, ConnectedProps } from \"react-redux\";\nimport ExpandButton from \"components/ExpandButton\";\nimport {\n\tisEditingNav,\n\tisHeaderCollapsed,\n\tisSideSectionCollapsed\n} from \"store/application/selectors\";\nimport {\n\tgetProjectName, getRouteState\n} from \"store/routing/selectors\";\nimport {\n\tgetSettingState,\n\tisAutoSaveEnabled,\n} from \"store/setting/selectors\";\nimport {\n\tsetHeaderCollapsed,\n\tsetInfo,\n\tsetShowingHelp,\n\tsetEditingActions,\n\tsetEditingItems,\n\tsetEditingNav,\n} from \"store/application/actions\";\nimport {\n\tsetAutoSaveEnabled\n} from \"store/setting/actions\";\nimport {\n\tsetProjectName,\n\tsetRouteState,\n} from \"store/routing/actions\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { benchEnd, benchStart } from \"util/benchmark\";\nimport { newEmptyRouteState, saveSettings, storeToLocalStorage } from \"data/storage\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\tprojectName: getProjectName(state),\n\tautoSaveEnabled: isAutoSaveEnabled(state),\n\tsideCollapsed: isSideSectionCollapsed(state),\n\theaderCollapsed: isHeaderCollapsed(state),\n\trouteState: getRouteState(state),\n\tsettingState: getSettingState(state),\n\tediting: isEditingNav(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetHeaderCollapsed,\n\t\tsetInfo,\n\t\tsetAutoSaveEnabled,\n\t\tsetProjectName,\n\t\tsetShowingHelp,\n\t\tsetEditingActions,\n\t\tsetEditingItems,\n\t\tsetEditingNav,\n\t\tsetRouteState,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const Header: React.FunctionComponent<Props> = ({\n\tautoSaveEnabled, projectName, headerCollapsed, sideCollapsed, actions, routeState, settingState, editing, appActions,\n}) => {\n\n\tconst exportButton = <button className=\"vertical-center space-left-small\" onClick={() => appActions.showIODialog()}>Import/Export</button>;\n\n\tconst saveButton = <button className=\"vertical-center space-left-small\" onClick={() => {\n\t\tconst start = benchStart();\n\t\tstoreToLocalStorage(routeState, settingState);\n\t\tactions.setEditingActions({ editing: false });\n\t\tactions.setEditingItems({ editing: false });\n\t\tactions.setEditingNav({ editing: false });\n\t\tactions.setInfo({ info: `Project saved to local storage. (${benchEnd(start)} ms)` });\n\t}}>Save</button>;\n\n\tconst helpButton = <button className=\"vertical-center space-left-small\" onClick={() => {\n\t\tactions.setShowingHelp({ showHelp: true });\n\t}}>Help</button>;\n\n\tconst buttonSection =\n\t\t<span>\n\t\t\t{exportButton}\n\t\t\t{saveButton}\n\t\t\t{helpButton}\n\t\t\t<button className=\"vertical-center space-left-small\" onClick={() => {\n\t\t\t\tconst enabled = !autoSaveEnabled;\n\t\t\t\tactions.setAutoSaveEnabled({ enabled });\n\t\t\t\tconst settings = { ...settingState, autoSave: enabled };\n\t\t\t\tsaveSettings(settings);\n\t\t\t}}>{autoSaveEnabled ? \"Auto Save: Enabled\" : \"Auto Save: Disabled\"}</button>\n\t\t\t<button className=\"vertical-center space-left-small\" disabled>Force Update Resources</button>\n\n\t\t\t<button className=\"vertical-center space-left-small\" onClick={() => {\n\t\t\t\tappActions.showAlert(\"Do you really want to delete everything? This is not reversible!!!\", [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tname: \"Reset\",\n\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\tconst start = benchStart();\n\t\t\t\t\t\t\tconst state = newEmptyRouteState();\n\t\t\t\t\t\t\tactions.setRouteState({ routeState: state });\n\t\t\t\t\t\t\tactions.setInfo({ info: `Reset completed. (${benchEnd(start)} ms)` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}}>Reset</button>\n\t\t</span>;\n\n\tconst allButtons =\n\t\t<span>\n\t\t\t{!headerCollapsed && buttonSection}\n\t\t\t{headerCollapsed && <>{exportButton}{saveButton}{helpButton}</>}\n\t\t</span>;\n\tlet projectNameSection;\n\tif (editing) {\n\t\tprojectNameSection =\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={projectName}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tactions.setProjectName({ projectName: e.target.value });\n\t\t\t\t}}\n\t\t\t/>;\n\t} else {\n\t\tprojectNameSection = projectName;\n\t}\n\n\treturn (\n\t\t<div className=\"overflow-hidden\">\n\n\t\t\t{\n\t\t\t\t!sideCollapsed && <h3 className=\"overflow-hidden\">\n\t\t\t\t\t{projectNameSection}\n\n\t\t\t\t</h3>\n\t\t\t}\n\n\t\t\t<ExpandButton expanded={!headerCollapsed} setExpanded={(expanded) => actions.setHeaderCollapsed({ collapsed: !expanded })} />\n\n\t\t\t{!sideCollapsed && allButtons}\n\n\t\t</div>\n\n\t);\n};\n\nexport default connector(Header);","import { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetInfo\n} from \"store/application/selectors\";\nimport { ReduxGlobalState } from \"store/store\";\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\ttext: getInfo(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\nexport const Footer: React.FunctionComponent<Props> = ({ text }: Props) => {\n\treturn (\n\t\t<span className=\"vertical-center\">{text}</span>\n\t);\n};\n\nexport default connector(Footer);","import { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetActiveSplitActionDeltaError,\n\tgetActiveSplitActionDeltas,\n\tgetItemColorByName,\n} from \"store/routing/selectors\";\nimport { DeltaType, typeToOperator } from \"data/delta\";\nimport { getForegroundAndBackground } from \"util/color\";\nimport { ReduxGlobalState } from \"store/store\";\nimport React from \"react\";\n\ntype RenderProps = {\n\tname: string,\n\ttype: DeltaType,\n\tvalue: number | string,\n\tforeground: string,\n\tbackground: string,\n}\n\nconst DeltaItemRender: React.FunctionComponent<RenderProps> = ({ name, type, value, foreground, background }) => {\n\tconst displayName = name;\n\tconst [op, displayValue] = typeToOperator(type, value);\n\tlet displayValueRef;\n\tif (type.startsWith(\"ref\")) {\n\t\tdisplayValueRef = `[${displayValue}]`;\n\t} else {\n\t\tdisplayValueRef = displayValue;\n\t}\n\treturn (\n\t\t<><span style={{ backgroundColor: background, color: foreground }}>[{displayName}]</span>{op}{displayValueRef}</>\n\t);\n};\n\nconst mapStateToPropsForDeltaItemRender = (state: ReduxGlobalState, ownProps: { name: string }) => {\n\tconst color = getItemColorByName(state, ownProps.name) ?? \"\";\n\tconst [foreground, background] = getForegroundAndBackground(color);\n\treturn {\n\t\tforeground, background\n\t};\n};\n\nconst DeltaItem = connect(mapStateToPropsForDeltaItemRender)(DeltaItemRender);\n\ntype ExternalProps = {\n\tactionIndex: number\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, { actionIndex }: ExternalProps) => ({\n\tdeltaError: getActiveSplitActionDeltaError(state, actionIndex),\n\tdeltas: getActiveSplitActionDeltas(state, actionIndex),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const DeltaList: React.FunctionComponent<Props> = ({ deltas, deltaError }) => {\n\tconst deltaItems = [];\n\tif (deltaError === undefined) {\n\t\tfor (const name in deltas) {\n\t\t\tdeltaItems.push(\n\t\t\t\t<React.Fragment key={name}><DeltaItem name={name} {...deltas[name]} />, </React.Fragment>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<tr key=\"delta\">\n\t\t\t<td className=\"icon-button-width align-right\">\n\t\t\t\t&#916;\n\t\t\t</td>\n\t\t\t<td colSpan={6}>\n\t\t\t\t{deltaError !== undefined ?\n\t\t\t\t\t<span className=\"deltastr-error\">{deltaError}</span>\n\t\t\t\t\t:\n\t\t\t\t\tdeltaItems\n\t\t\t\t}\n\n\t\t\t</td>\n\n\t\t</tr>\n\t);\n};\n\nexport default connector(DeltaList);","import { connect, ConnectedProps } from \"react-redux\";\nimport DeltaList from \"./DeltaList\";\nimport {\n\tgetActiveSplitActionCount,\n\tgetActiveSplitActionDeltaError,\n\tgetActiveSplitActionDeltas,\n\tgetActiveSplitActionDeltaString,\n\tgetActiveSplitActionName,\n\tisActiveSplitActionExpanded\n} from \"store/routing/selectors\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport React from \"react\";\nimport ExpandButton from \"components/ExpandButton\";\nimport { isEditingActions } from \"store/application/selectors\";\nimport { ACTION_LIMIT } from \"data/limit\";\nimport {\n\tsetEditingActions,\n\tsetInfo,\n\tmarkResourceDirtyAtSplit,\n} from \"store/application/actions\";\nimport {\n\tcreateAction,\n\tsetActionName,\n\tsetActionExpanded,\n\tdeleteAction,\n\tswapActions,\n\tsetActionDeltaString,\n\tsetActiveAction,\n} from \"store/routing/actions\";\nimport { benchStart, benchEnd } from \"util/benchmark\";\n\ntype ExternalProps = {\n\tindex: number,\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, { index }: ExternalProps) => ({\n\tname: getActiveSplitActionName(state, index),\n\texpanded: isActiveSplitActionExpanded(state, index),\n\tlength: getActiveSplitActionCount(state),\n\tdeltaString: getActiveSplitActionDeltaString(state, index),\n\tdeltaError: getActiveSplitActionDeltaError(state, index),\n\tdeltas: getActiveSplitActionDeltas(state, index),\n\tediting: isEditingActions(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetInfo,\n\t\tcreateAction,\n\t\tsetEditingActions,\n\t\tsetActionName,\n\t\tsetActionExpanded,\n\t\tdeleteAction,\n\t\tswapActions,\n\t\tsetActionDeltaString,\n\t\tmarkResourceDirtyAtSplit,\n\t\tsetActiveAction,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const ActionItem: React.FunctionComponent<Props> = ({\n\tindex, name = \"\", expanded = false, editing, actions, deltaString = \"\", length = 0, appActions,\n}: Props) => {\n\tconst displayName = name || \"[Unnamed Action]\";\n\tconst isFirst = index === 0;\n\tconst isLast = index === length - 1;\n\tconst expandButton =\n\t\t<td className=\"icon-button-width\">\n\t\t\t{deltaString &&\n\t\t\t\t<ExpandButton expanded={expanded} setExpanded={(expanded) => {\n\t\t\t\t\tactions.setActionExpanded({ actionIndex: index, expanded });\n\t\t\t\t}} />\n\t\t\t}\n\t\t</td>;\n\tlet actionNode;\n\tif (editing) {\n\t\tactionNode =\n\t\t\t<tr>\n\t\t\t\t{expandButton}\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!isFirst &&\n\t\t\t\t\t\t<button className=\"icon-button\" disabled={isFirst} title=\"Move up\" onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.swapActions({ i: index, j: index - 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t\tactions.setInfo({ info: `Action moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}}>&uarr;</button>\n\t\t\t\t\t}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t{!isLast &&\n\t\t\t\t\t\t<button className=\"icon-button\" title=\"Move down\" disabled={isLast} onClick={() => {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.swapActions({ i: index, j: index + 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t\tactions.setInfo({ info: `Action moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}}>&darr;</button>\n\t\t\t\t\t}\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"Delete\" onClick={() => {\n\t\t\t\t\t\tappActions.showAlert(\n\t\t\t\t\t\t\t`Delete action \"${name}\"? This is NOT reversible!`,\n\t\t\t\t\t\t\t[{\n\t\t\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\tname: \"Delete\",\n\t\t\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t\t\t\tactions.deleteAction({ actionIndex: index });\n\t\t\t\t\t\t\t\t\tactions.setInfo({ info: `Action deleted. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}}>X</button>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t\t<button className=\"icon-button\" title=\"New Action Below\" onClick={() => {\n\t\t\t\t\t\tif (length >= ACTION_LIMIT) {\n\t\t\t\t\t\t\tconst message = `You have reached the maximum number of actions per split (${ACTION_LIMIT})`;\n\t\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\tactions.createAction({ actionIndex: index + 1 });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t\tactions.setEditingActions({ editing: true });\n\t\t\t\t\t\t\tactions.setInfo({ info: `Action created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>*</button>\n\t\t\t\t</td>\n\t\t\t\t<td className=\"action-name-width\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"action-name-width\"\n\t\t\t\t\t\tplaceholder=\"Action Title/Notes\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tactions.setActionName({ actionIndex: index, name: e.target.value });\n\t\t\t\t\t\t}} />\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\t\tplaceholder=\"Delta String\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={deltaString}\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tactions.setActionDeltaString({ actionIndex: index, deltaString: e.target.value });\n\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t}} />\n\t\t\t\t</td>\n\n\t\t\t</tr>;\n\t} else {\n\t\tactionNode =\n\t\t\t<tr>\n\t\t\t\t{expandButton}\n\t\t\t\t<td colSpan={6}>\n\t\t\t\t\t<span>{deltaString ? <u className=\"split-link\" onClick={() => {\n\t\t\t\t\t\tactions.setActiveAction({ activeAction: index });\n\t\t\t\t\t}}>{displayName}</u> : <em>{displayName}</em>}\n\t\t\t\t\t</span>\n\t\t\t\t\t{!deltaString && <div className=\"action-note-spacer\" />}\n\t\t\t\t</td>\n\t\t\t</tr>;\n\t}\n\n\tif (!expanded || !deltaString) {\n\t\treturn actionNode;\n\t}\n\n\treturn <>\n\t\t{actionNode}\n\t\t<DeltaList actionIndex={index} />\n\t</>;\n};\n\nexport default connector(ActionItem);","import { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { AppAction } from \"App\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetActiveSplit,\n\tgetActiveSplitActionCount\n} from \"store/routing/selectors\";\nimport {\n\tcreateAction,\n} from \"store/routing/actions\";\nimport {\n\tsetEditingActions,\n\tsetInfo,\n\tmarkResourceDirtyAtSplit,\n} from \"store/application/actions\";\nimport { ReduxGlobalState } from \"store/store\";\n\nimport ActionItem from \"./ActionItem\";\nimport { ACTION_LIMIT } from \"data/limit\";\nimport { benchStart, benchEnd } from \"util/benchmark\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\tactive: getActiveSplit(state) >= 0,\n\tlength: getActiveSplitActionCount(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tcreateAction,\n\t\tsetEditingActions,\n\t\tsetInfo,\n\t\tmarkResourceDirtyAtSplit,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nexport const ActionList: React.FunctionComponent<Props> = ({ length, active, actions, appActions }: Props) => {\n\tif (!active || length === undefined) {\n\t\treturn <span>Click on a split to view its details</span>;\n\t}\n\tconst actionNodes = [];\n\tfor (let i = 0; i < length; i++) {\n\t\tactionNodes.push(<ActionItem\n\t\t\tkey={i}\n\t\t\tindex={i}\n\t\t\tappActions={appActions}\n\t\t/>);\n\t}\n\treturn (\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t{actionNodes}\n\t\t\t\t<tr key=\"new_action_button\">\n\t\t\t\t\t<td colSpan={7}>\n\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\tif (length >= ACTION_LIMIT) {\n\t\t\t\t\t\t\t\tconst message = `You have reached the maximum number of actions per split (${ACTION_LIMIT})`;\n\t\t\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\tactions.createAction({ actionIndex: length });\n\t\t\t\t\t\t\t\tactions.markResourceDirtyAtSplit({});\n\t\t\t\t\t\t\t\tactions.setEditingActions({ editing: true });\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Action created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>Add Action/Notes</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t);\n};\n\nexport default connector(ActionList);","\nimport Box from \"components/Box\";\nimport ActionList from \"components/action/ActionList\";\nimport {\n\tgetActiveSplitName,\n} from \"store/routing/selectors\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport {\n\tgetActionsHeaderBounds,\n\tgetActionsMainBounds,\n\tisEditingActions\n} from \"store/application/selectors\";\nimport {\n\tsetEditingActions\n} from \"store/application/actions\";\nimport {\n\tchangeActiveSplit,\n} from \"store/routing/actions\";\n\ntype ExternalProps = {\n\tappActions: AppAction\n}\nconst mapStateToProps = (state: ReduxGlobalState) => {\n\treturn {\n\t\tactionMainBounds: getActionsMainBounds(state),\n\t\tactionHeaderBounds: getActionsHeaderBounds(state),\n\t\tsplitName: getActiveSplitName(state),\n\t\tediting: isEditingActions(state),\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetEditingActions,\n\t\tchangeActiveSplit,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps\n\nexport const Actions: React.FunctionComponent<Props> = ({\n\tactionMainBounds, actionHeaderBounds, editing, splitName, appActions, actions\n}: Props) => {\n\n\tconst buttonSection = splitName !== undefined &&\n\t\t<span>\n\t\t\t<button className=\"space-left-small\" onClick={() => {\n\t\t\t\tactions.setEditingActions({ editing: !editing });\n\t\t\t}}>\n\t\t\t\t{editing ? \"Finish\" : \"Edit\"}\n\t\t\t</button>\n\t\t\t<button className=\"space-left-small\" onClick={() => {\n\t\t\t\tactions.changeActiveSplit({ changeBy: -1 });\n\t\t\t}}>Previous Split</button>\n\t\t\t<button className=\"space-left-small\" onClick={() => {\n\t\t\t\tactions.changeActiveSplit({ changeBy: 1 });\n\t\t\t}}>Next Split</button>\n\t\t</span>;\n\n\treturn (\n\t\t<div >\n\t\t\t<Box layout={actionMainBounds} borderClass=\"overflow-auto\">\n\t\t\t\t<div>\n\t\t\t\t\t<ActionList appActions={appActions} />\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t\t<Box layout={actionHeaderBounds} >\n\t\t\t\t<div>\n\t\t\t\t\t<strong> Split Detail {splitName && \" - \" + splitName}</strong>\n\t\t\t\t\t{buttonSection}\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default connector(Actions);","import Box from \"components/Box\";\n\nimport { calc } from \"util/layout\";\nimport { ReactNode } from \"react\";\nimport { AlertOption } from \"App\";\ntype Props = {\n\tcontent: ReactNode | undefined,\n\talertActions: AlertOption[],\n\tactions: {\n\t\thideAlert: () => void\n\t}\n}\n\nconst Alert: React.FunctionComponent<Props> = ({ content, alertActions, actions }: Props) => {\n\tif (content === undefined) {\n\t\treturn null;\n\t}\n\tconst width = \"50%\";\n\tconst height = \"15rem\";\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: \"rgba(0,0,0,0.6)\",\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\twidth: \"100vw\",\n\t\t\t\t\theight: \"100vh\"\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Box layout={{\n\t\t\t\tx: calc(calc(\"100vw\", \"-\", width), \"/\", \"2\"),\n\t\t\t\ty: calc(calc(\"100vh\", \"-\", height), \"/\", \"2\"),\n\t\t\t\tw: width,\n\t\t\t\th: height,\n\t\t\t}}>\n\t\t\t\t<div style={{ backgroundColor: \"white\", height: \"100%\", boxSizing: \"border-box\", padding: \"1rem\" }}>\n\t\t\t\t\t{content}\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\tbottom: \"1rem\",\n\t\t\t\t\t\tright: \"1rem\"\n\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{alertActions.map((alertAction, i) => <button\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName=\"margin-small\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (alertAction.execute) {\n\t\t\t\t\t\t\t\t\talertAction.execute();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tactions.hideAlert();\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{alertAction.name}\n\t\t\t\t\t\t</button>)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default Alert;","import { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { getForegroundAndBackground } from \"util/color\";\n\nimport {\n\tgetItemColorByIndex,\n\tgetItemCount,\n\tgetItemNameByIndex\n} from \"store/routing/selectors\";\nimport {\n\tcreateItem,\n\tsetItemName,\n\tsetItemColor,\n\tdeleteItem,\n\tswapItems,\n\treparseAllDeltaStrings,\n} from \"store/routing/actions\";\nimport {\n\tsetInfo,\n\tmarkResourceDirtyAt,\n} from \"store/application/actions\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { AppAction } from \"App\";\nimport { benchEnd, benchStart } from \"util/benchmark\";\nimport { ITEM_LIMIT } from \"data/limit\";\nimport { useState } from \"react\";\n\ntype ExternalProps = {\n\tindex: number,\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, ownProps: ExternalProps) => {\n\tconst color = getItemColorByIndex(state, ownProps.index);\n\tconst [foreground, background] = getForegroundAndBackground(color);\n\treturn {\n\t\tname: getItemNameByIndex(state, ownProps.index),\n\t\tcolor,\n\t\tbackground,\n\t\tforeground,\n\t\titemCount: getItemCount(state),\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tcreateItem,\n\t\tsetItemName,\n\t\tsetItemColor,\n\t\tsetInfo,\n\t\tdeleteItem,\n\t\tswapItems,\n\t\tmarkResourceDirtyAt,\n\t\treparseAllDeltaStrings,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nconst ItemEdit: React.FunctionComponent<Props> = ({ name, color, foreground, background, index, itemCount, actions, appActions }) => {\n\tconst isLast = index === itemCount - 1;\n\tconst isFirst = index === 0;\n\tconst [renamed, setRenamed] = useState(\"\");\n\treturn (\n\t\t<tr>\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t{!isFirst &&\n\t\t\t\t\t<button className=\"icon-button\" disabled={isFirst} title=\"Move up\" onClick={() => {\n\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\tactions.swapItems({ i: index, j: index - 1 });\n\t\t\t\t\t\tactions.setInfo({ info: `Item moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t}}>&uarr;</button>\n\t\t\t\t}\n\n\t\t\t</td>\n\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t{!isLast &&\n\t\t\t\t\t<button className=\"icon-button\" title=\"Move down\" disabled={isLast} onClick={() => {\n\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\tactions.swapItems({ i: index, j: index + 1 });\n\t\t\t\t\t\tactions.setInfo({ info: `Item moved. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t}}>&darr;</button>\n\t\t\t\t}\n\n\t\t\t</td>\n\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t<button className=\"icon-button\" title=\"Delete\" onClick={() => {\n\t\t\t\t\tappActions.showAlert(\n\t\t\t\t\t\t`Delete item \"${name}\"? This item will also be removed from actions that currently have it. This is NOT reversible!`,\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\tname: \"Cancel\"\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tname: \"Delete\",\n\t\t\t\t\t\t\texecute: () => {\n\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\tactions.deleteItem({ index });\n\t\t\t\t\t\t\t\tactions.reparseAllDeltaStrings();\n\t\t\t\t\t\t\t\tactions.markResourceDirtyAt({ globalIndex: 0 });\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Item deleted. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t);\n\t\t\t\t}}>X</button>\n\t\t\t</td>\n\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t<button className=\"icon-button\" title=\"New Item Below\" onClick={() => {\n\t\t\t\t\tif (itemCount >= ITEM_LIMIT) {\n\t\t\t\t\t\tconst message = `You have reached the maximum number of items (${ITEM_LIMIT})`;\n\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\tactions.createItem({\n\t\t\t\t\t\t\tindex: index + 1\n\t\t\t\t\t\t});\n\t\t\t\t\t\tactions.setInfo({ info: `Item created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t}\n\t\t\t\t}}>*</button>\n\t\t\t</td>\n\t\t\t<td className=\"icon-button-width\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: background,\n\t\t\t\t\tcolor: foreground\n\t\t\t\t}}>\n\t\t\t\t{index + 1}.\n\t\t\t</td>\n\t\t\t<td className=\"icon-button-width\">\n\t\t\t\t<button disabled={!renamed || renamed === name} className=\"icon-button\" title=\"Apply rename\" onClick={() => {\n\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\tactions.setItemName({ index, name: renamed });\n\t\t\t\t\tactions.reparseAllDeltaStrings();\n\t\t\t\t\tactions.markResourceDirtyAt({ globalIndex: 0 });\n\n\t\t\t\t\tsetRenamed(\"\");\n\t\t\t\t\tactions.setInfo({ info: `Item renamed. (${benchEnd(startTime)} ms)` });\n\t\t\t\t}}>R</button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\tplaceholder={name || \"[Unnamed]\"}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={renamed}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetRenamed(e.target.value);\n\t\t\t\t\t}} />\n\n\t\t\t</td>\n\n\t\t\t<td>\n\t\t\t\t<input\n\n\t\t\t\t\tclassName=\"full-width\"\n\t\t\t\t\tplaceholder=\"Color (e.g, red, #FF0000, rgb(255, 0, 0)\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={color}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tactions.setItemColor({ index, color: e.target.value });\n\t\t\t\t\t}} />\n\t\t\t</td>\n\n\t\t</tr>\n\t);\n};\n\nexport default connector(ItemEdit);","import { getForegroundAndBackground } from \"util/color\";\nimport { ItemDelta } from \"data/item\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { getItemColorByIndex, getItemNameByIndex } from \"store/routing/selectors\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\ntype ExternalProps = {\n\tindex: number,\n\tdelta?: ItemDelta,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState, { index }: ExternalProps) => {\n\tconst color = getItemColorByIndex(state, index);\n\tconst [foreground, background] = getForegroundAndBackground(color);\n\treturn {\n\t\tname: getItemNameByIndex(state, index),\n\t\tforeground,\n\t\tbackground,\n\t};\n};\n\nconst connector = connect(mapStateToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nfunction deltaString(delta: ItemDelta): string {\n\tconst { value, change } = delta;\n\tif (change === 0) {\n\t\treturn `x${value}`;\n\t}\n\treturn `x${value} (${change >= 0 ? \"+\" : \"\"}${change})`;\n}\n\nconst ItemDisplay: React.FunctionComponent<Props> = ({ name, delta, foreground, background }: Props) => {\n\tconst displayName = name || \"[Unnamed Item]\";\n\treturn <td style={{ backgroundColor: background, color: foreground }}>\n\t\t<span className=\"item-span\" >{displayName}</span>\n\t\t<span className=\"item-span\" >{delta && deltaString(delta)}</span>\n\t</td>;\n};\n\nexport default connector(ItemDisplay);","import ItemEdit from \"./ItemEdit\";\nimport ItemDisplay from \"./ItemDisplay\";\nimport { AppAction } from \"App\";\nimport {\n\tgetActiveGlobalIndex,\n\tgetFilteredItemIndices,\n\tgetItemCount,\n\tgetItemNameByIndex,\n} from \"store/routing/selectors\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { getItemFilter } from \"store/setting/selectors\";\nimport { getActionResourceByGlobalIndex, isEditingItems, isOnlyShowingChangedResources } from \"store/application/selectors\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ITEM_LIMIT } from \"data/limit\";\nimport {\n\tsetInfo,\n} from \"store/application/actions\";\nimport { createItem } from \"store/routing/actions\";\nimport { benchStart, benchEnd } from \"util/benchmark\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => {\n\tconst filterString = getItemFilter(state);\n\tconst filter = !filterString ? [] : filterString.split(\",\").map(s => s.trim());\n\n\tconst globalIndex = getActiveGlobalIndex(state);\n\tconst deltas = globalIndex !== undefined ? getActionResourceByGlobalIndex(state, globalIndex) : undefined;\n\n\tlet filteredIndices = getFilteredItemIndices(state, filter);\n\tconst showOnlyChanged = isOnlyShowingChangedResources(state);\n\tif (showOnlyChanged && deltas && Object.keys(deltas).length !== 0) {\n\t\tfilteredIndices = filteredIndices.filter(i => {\n\t\t\tconst name = getItemNameByIndex(state, i);\n\t\t\treturn name in deltas && deltas[name].change !== 0;\n\t\t});\n\t}\n\n\treturn {\n\t\titemIndices: filteredIndices,\n\t\tediting: isEditingItems(state),\n\t\titemCount: getItemCount(state),\n\t\tgetItemNameByIndex: (i: number) => getItemNameByIndex(state, i),\n\t\tdeltas,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetInfo,\n\t\tcreateItem,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nconst ItemList: React.FunctionComponent<Props> = ({ itemIndices, deltas, getItemNameByIndex, editing, actions, appActions, itemCount }) => {\n\tlet itemSection;\n\n\tif (editing) {\n\t\titemSection = itemIndices.map(i =>\n\t\t\t<ItemEdit\n\t\t\t\tkey={i}\n\t\t\t\tindex={i}\n\t\t\t\tappActions={appActions}\n\t\t\t/>\n\t\t);\n\t} else {\n\t\titemSection = [];\n\t\tfor (let i = 0; i < itemIndices.length; i += 4) {\n\t\t\tconst row =\n\t\t\t\t<tr key={i}>\n\t\t\t\t\t{[i, i + 1, i + 2, i + 3].map(i => {\n\t\t\t\t\t\tif (i >= itemIndices.length) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst index = itemIndices[i];\n\t\t\t\t\t\tconst name = getItemNameByIndex(index);\n\t\t\t\t\t\tconst delta = deltas ? deltas[name] : undefined;\n\t\t\t\t\t\treturn <ItemDisplay key={i} index={itemIndices[i]} delta={delta} />;\n\t\t\t\t\t})}\n\t\t\t\t</tr>;\n\t\t\titemSection.push(row);\n\t\t}\n\t}\n\treturn (\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t{itemSection}\n\t\t\t\t<tr key=\"new_item_button\">\n\t\t\t\t\t<td colSpan={5}>\n\t\t\t\t\t\t<button onClick={() => {\n\t\t\t\t\t\t\tif (itemCount >= ITEM_LIMIT) {\n\t\t\t\t\t\t\t\tconst message = `You have reached the maximum number of items (${ITEM_LIMIT})`;\n\t\t\t\t\t\t\t\tappActions.showAlert(message);\n\t\t\t\t\t\t\t\tactions.setInfo({ info: message });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst startTime = benchStart();\n\t\t\t\t\t\t\t\tactions.createItem({\n\t\t\t\t\t\t\t\t\tindex: itemCount\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tactions.setInfo({ info: `Item created. (${benchEnd(startTime)} ms)` });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>New Item</button>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\n\t\t</table>\n\t);\n};\n\nexport default connector(ItemList);","import ItemList from \"components/item/ItemList\";\nimport Box from \"components/Box\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { AppAction } from \"App\";\nimport { ReduxGlobalState } from \"store/store\";\nimport {\n\tgetResourceCalcError,\n\tgetResourceCalcProgress,\n\tgetResourcesHeaderBounds,\n\tgetResourcesMainBounds,\n\tisResourcesSectionCollapsed,\n\tisEditingItems,\n\tisOnlyShowingChangedResources,\n\n} from \"store/application/selectors\";\nimport { setItemFilter } from \"store/setting/actions\";\nimport { getItemFilter } from \"store/setting/selectors\";\nimport {\n\tsetEditingItems,\n\tsetShowOnlyChangedResources,\n\tsetResourcesCollapsed,\n} from \"store/application/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport {\n\tgetTotalActionCount,\n\tgetActiveActionName,\n} from \"store/routing/selectors\";\nimport React from \"react\";\nimport ExpandButton from \"components/ExpandButton\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\titemMainBounds: getResourcesMainBounds(state),\n\titemHeaderBounds: getResourcesHeaderBounds(state),\n\tactiveActionName: getActiveActionName(state),\n\tresourcesCollapsed: isResourcesSectionCollapsed(state),\n\tediting: isEditingItems(state),\n\tprogress: getResourceCalcProgress(state),\n\ttotal: getTotalActionCount(state),\n\terror: getResourceCalcError(state),\n\tfilterString: getItemFilter(state),\n\tonlyShowChanging: isOnlyShowingChangedResources(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetEditingItems,\n\t\tsetItemFilter,\n\t\tsetShowOnlyChangedResources,\n\t\tsetResourcesCollapsed,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nconst Items: React.FunctionComponent<Props> = ({\n\titemMainBounds, itemHeaderBounds, resourcesCollapsed, editing, actions, appActions, filterString, progress, total, error, onlyShowChanging, activeActionName\n}: Props) => {\n\tconst collapsed = resourcesCollapsed;\n\tconst expandButton = <ExpandButton\n\t\texpanded={!collapsed} setExpanded={(expanded) => actions.setResourcesCollapsed({ collapsed: !expanded })}\n\t/>;\n\tconst buttonSection =\n\t\t<>\n\t\t\t<button className=\"space-left-small\" onClick={() => actions.setEditingItems({ editing: !editing })}>{editing ? \"Finish\" : \"Edit\"}</button>\n\n\t\t\t<input\n\t\t\t\tclassName=\"space-left-small\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={filterString}\n\t\t\t\tplaceholder=\"Filter (use , to separate)\"\n\t\t\t\tonChange={(e) => actions.setItemFilter({ filter: e.target.value })}\n\t\t\t/>\n\t\t\t<button className=\"space-left-small icon-button\" title=\"Clear\" onClick={() => actions.setItemFilter({ filter: \"\" })}>X</button>\n\t\t\t{activeActionName && <>\n\t\t\t\t<input\n\t\t\t\t\tid=\"show_only_changed_checkbox\"\n\t\t\t\t\tclassName=\"space-left-small\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={onlyShowChanging}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tactions.setShowOnlyChangedResources({ showOnlyChangedResources: e.target.checked });\n\t\t\t\t\t}} />\n\t\t\t\t<label htmlFor=\"show_only_changed_checkbox\">Show Only Changed</label></>\n\t\t\t}\n\t\t</>;\n\n\tlet resourceInfo;\n\tif (error === null) {\n\t\tif (progress === total || total === 0) {\n\t\t\tresourceInfo = <span>Resource up to date</span>;\n\t\t} else {\n\t\t\tresourceInfo = <span>Updating Resources... ({progress}/{total})</span>;\n\t\t}\n\t} else {\n\t\tresourceInfo = <span className=\"deltastr-error\" title={error.message}>{error.message}</span>;\n\t}\n\treturn (\n\t\t<div >\n\t\t\t<Box layout={itemMainBounds} borderClass=\"overflow-auto\">\n\n\t\t\t\t<div>\n\t\t\t\t\t{!collapsed && <ItemList appActions={appActions} />}\n\t\t\t\t</div>\n\n\t\t\t</Box>\n\t\t\t<Box layout={itemHeaderBounds} borderClass=\"overflow-hidden\">\n\t\t\t\t<div>\n\t\t\t\t\t{expandButton}\n\t\t\t\t\t<strong>Resources {activeActionName && ` - ${activeActionName}`}</strong>\n\t\t\t\t\t{!collapsed && buttonSection}\n\n\t\t\t\t</div>\n\t\t\t\t{!collapsed &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{resourceInfo}\n\t\t\t\t\t</div>}\n\t\t\t\t{!resourcesCollapsed && <hr />}\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default connector(Items);","import { ActionDelta } from \"./delta\";\nimport store, { ReduxGlobalState } from \"store/store\";\nimport { getActionResourceByGlobalIndex, getResourceCalcError, getResourceCalcProgress } from \"store/application/selectors\";\nimport { getActionDeltaError, getActionDeltas, getActionIndexFromGlobal, getActionName, getBranchName, getGlobalActionIndex, getSplitName, getTotalActionCount } from \"store/routing/selectors\";\nimport { markResourceDirtyAt, setResourceContent, setResourceError } from \"store/application/actions\";\n\nexport type RouteResources = {\n\terror: ResourceError,\n\tcontent: ActionResource[],\n\tprogress: number,\n}\n\nexport type ResourceError = {\n\tbranch: number,\n\tsplit: number,\n\taction: number,\n\tmessage: string,\n} | null;\n\nexport type ActionResource = Record<string, ActionResourceItem>\nexport type ActionResourceItem = {\n\tvalue: number,\n\tchange: number,\n}\n\nlet handle: NodeJS.Timeout | undefined = undefined;\n\nexport function startResourceCalcClock(): void {\n\tstopResourceCalcClock();\n\thandle = setInterval(update, 100);\n}\n\nexport function stopResourceCalcClock(): void {\n\tif (handle !== undefined) {\n\t\tclearInterval(handle);\n\t}\n}\n\nfunction update() {\n\tif (!store.getState()) {\n\t\treturn;\n\t}\n\tconst state = store.getState();\n\tconst currentlyNeedToUpdate = getResourceCalcProgress(state);\n\tconst total = getTotalActionCount(state);\n\tif (total !== 0 && currentlyNeedToUpdate < total) {\n\t\tupdateAt(state, currentlyNeedToUpdate);\n\t}\n}\n\nfunction updateAt(state: ReduxGlobalState, currentlyNeedToUpdate: number) {\n\tif (currentlyNeedToUpdate < 0) {\n\t\tcurrentlyNeedToUpdate = 0;\n\t}\n\n\tconst error = getResourceCalcError(state);\n\tif (error !== null) {\n\t\tconst { branch, split, action } = error;\n\t\tconst errorGlobalIndex = getGlobalActionIndex(state, branch, split, action);\n\t\tif (currentlyNeedToUpdate > errorGlobalIndex) {\n\t\t\tstore.dispatch(setResourceContent({ globalIndex: currentlyNeedToUpdate, content: {} }));\n\t\t\treturn;\n\t\t}\n\t}\n\tlet before: ActionResource = {};\n\tif (currentlyNeedToUpdate > 0) {\n\t\tconst resourceBefore = getActionResourceByGlobalIndex(state, currentlyNeedToUpdate - 1);\n\t\tif (resourceBefore === undefined) {\n\t\t\tstore.dispatch(markResourceDirtyAt({ globalIndex: currentlyNeedToUpdate - 1 }));\n\t\t\treturn;\n\t\t}\n\t\tbefore = resourceBefore;\n\t}\n\tconst [branch, split, action] = getActionIndexFromGlobal(state, currentlyNeedToUpdate);\n\tconst deltas = getActionDeltas(state, branch, split, action);\n\tconst deltaError = getActionDeltaError(state, branch, split, action);\n\tif (deltaError !== null || deltas === null) {\n\t\tconst branchName = getBranchName(state, branch);\n\t\tconst splitName = getSplitName(state, branch, split);\n\t\tconst actionName = getActionName(state, branch, split, action);\n\t\tconst resourceError: ResourceError = {\n\t\t\tbranch,\n\t\t\tsplit,\n\t\t\taction,\n\t\t\tmessage: `Error in branch \"${branchName}\", split \"${splitName}\", action \"${actionName}\"`,\n\t\t};\n\t\tstore.dispatch(setResourceError({ error: resourceError }));\n\t\tstore.dispatch(setResourceContent({ globalIndex: currentlyNeedToUpdate, content: {} }));\n\t\treturn;\n\t}\n\n\tconst after = calculateChange(before, deltas);\n\tstore.dispatch(setResourceContent({ globalIndex: currentlyNeedToUpdate, content: after }));\n}\n\nfunction calculateChange(before: ActionResource, deltas: ActionDelta): ActionResource {\n\tconst getAmountInBefore = (n: string) => n in before ? before[n].value : 0;\n\tconst after: ActionResource = {};\n\tfor (const name in before) {\n\t\tafter[name] = {\n\t\t\tvalue: before[name].value,\n\t\t\tchange: 0,\n\t\t};\n\t}\n\tfor (const name in deltas) {\n\t\tconst { type, value } = deltas[name];\n\t\tconst oldAmount = getAmountInBefore(name);\n\t\tlet newAmount: number;\n\t\tlet change: number;\n\t\tswitch (type) {\n\t\t\tcase \"add\":\n\t\t\t\tchange = Number(value) ?? 0;\n\t\t\t\tnewAmount = oldAmount + change;\n\t\t\t\tbreak;\n\t\t\tcase \"set\":\n\t\t\t\tnewAmount = Number(value) ?? 0;\n\t\t\t\tchange = newAmount - oldAmount;\n\t\t\t\tbreak;\n\t\t\tcase \"ref_add\":\n\t\t\t\tchange = getAmountInBefore(value.toString());\n\t\t\t\tnewAmount = oldAmount + change;\n\t\t\t\tbreak;\n\t\t\tcase \"ref_sub\":\n\t\t\t\tchange = -getAmountInBefore(value.toString());\n\t\t\t\tnewAmount = oldAmount + change;\n\t\t\t\tbreak;\n\t\t\tcase \"ref_set\":\n\t\t\t\tnewAmount = getAmountInBefore(value.toString());\n\t\t\t\tchange = newAmount - oldAmount;\n\t\t}\n\t\tafter[name] = {\n\t\t\tvalue: newAmount,\n\t\t\tchange,\n\t\t};\n\t}\n\treturn after;\n}","import { setInfo } from \"store/application/actions\";\nimport store from \"store/store\";\nimport { storeToLocalStorage } from \"./storage\";\n\nlet handle: NodeJS.Timeout | undefined = undefined;\n\nexport function startAutoSaveClock(): void {\n\tstopAutoSaveClock();\n\thandle = setInterval(save, 20000);\n}\n\nexport function stopAutoSaveClock(): void {\n\tif (handle !== undefined) {\n\t\tclearInterval(handle);\n\t}\n}\n\nfunction save() {\n\tif (!store.getState()) {\n\t\treturn;\n\t}\n\tconst state = store.getState();\n\tif (state.settingState.autoSave) {\n\t\tstoreToLocalStorage(state.routeState, state.settingState);\n\t\tstore.dispatch(setInfo({ info: `Last saved to local storage: ${new Date()}` }));\n\t}\n}","import { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport { AppAction } from \"App\";\nimport { downloadToFile, exportAsEncoded, exportAsJson, importAsEncoded, importAsJson, readFromFile } from \"data/storage\";\nimport { useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { setRouteState } from \"store/routing/actions\";\nimport { getProjectName, getRouteState } from \"store/routing/selectors\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { setInfo, markResourceDirtyAt } from \"store/application/actions\";\nimport { RouteState } from \"store/routing/type\";\n\ntype ExternalProps = {\n\tappActions: AppAction,\n}\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\trouteState: getRouteState(state),\n\tdownloadName: getProjectName(state) || \"Routing\",\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetRouteState,\n\t\tsetInfo,\n\t\tmarkResourceDirtyAt,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & ExternalProps;\n\nconst IODialog: React.FunctionComponent<Props> = ({ routeState, downloadName, appActions, actions }) => {\n\tconst [file, setFile] = useState<FileList | null>(null);\n\n\tconst importFunc = (theFile: File, importer: (str: string) => [RouteState | null, string | null]): void => {\n\t\treadFromFile(theFile, result => {\n\t\t\tconst [state, error] = importer(result);\n\t\t\tif (error !== null || state === null) {\n\t\t\t\tappActions.showIODialog(false);\n\t\t\t\tappActions.showAlert(`Error on import: ${error}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tactions.setRouteState({ routeState: state });\n\t\t\tactions.markResourceDirtyAt({ globalIndex: 0 });\n\t\t\tappActions.showIODialog(false);\n\t\t\tactions.setInfo({ info: \"Imported.\" });\n\t\t});\n\t};\n\n\treturn <div>\n\t\t<div>\n\t\t\t<p><strong>Export</strong></p>\n\t\t\t<hr />\n\t\t\tExport As:\n\t\t\t<button className=\"space-left-small\" onClick={() => {\n\t\t\t\tconst string = exportAsEncoded(routeState);\n\t\t\t\tdownloadToFile(downloadName, string, \"txt\");\n\t\t\t}}>Base64 (.txt)</button>\n\t\t\t<button className=\"space-left-small\" disabled>Compressed (.txt)</button>\n\t\t\t<button className=\"space-left-small\" onClick={() => {\n\t\t\t\tconst string = exportAsJson(routeState);\n\t\t\t\tdownloadToFile(downloadName, string, \"json\");\n\t\t\t}}>JSON (.json) [Recommended]</button>\n\t\t\t<button className=\"space-left-small\" disabled>Text (.txt)</button>\n\t\t\t<button className=\"space-left-small\" disabled>LiveSplit (.lss)</button>\n\n\t\t\t<hr />\n\t\t\t<p><strong>Import</strong></p>\n\t\t\t<hr />\n\t\t\t<input className=\"vertical-center space-left-small\" type=\"file\" onChange={(e) => {\n\t\t\t\tsetFile(e.target.files);\n\t\t\t}} />\n\t\t\t<br />\n\t\t\tImport As:\n\t\t\t<button className=\"space-left-small\" disabled={file === null} onClick={() => {\n\t\t\t\tif (file === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\timportFunc(file[0], importAsEncoded);\n\t\t\t}}>Base64 (.txt)</button>\n\t\t\t<button className=\"space-left-small\" disabled>Compressed (.txt)</button>\n\t\t\t<button className=\"space-left-small\" disabled={file === null} onClick={() => {\n\t\t\t\tif (file === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\timportFunc(file[0], importAsJson);\n\t\t\t}}>JSON (.json)</button>\n\t\t</div>\n\t</div>;\n};\n\nexport default connector(IODialog);","import Box from \"components/Box\";\n\nconst Help: React.FunctionComponent = () =>\n\t<Box layout={{\n\t\tx: \"0\",\n\t\ty: \"0\",\n\t\tw: \"100%\",\n\t\th: \"100%\",\n\t}} borderClass=\"overflow-auto\">\n\t\t<div className=\"help-doc\">\n\t\t\t<h1>Resource Routing Tool</h1>\n\t\t\t<p>\n\t\t\t\tThis tool is very useful for tracking various resources needed in a speedrun.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tYou might say: <em> \"Why don't I just use a spreadsheet?\" </em>\n\t\t\t\tThis tool has some unique features that makes it better than a normal spreadsheet:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>The robust algorithm keeps the route <strong>consistent</strong> while <strong>moving splits and branches around.</strong></li>\n\t\t\t\t\t<li>Easy-to-use syntax to define and organize your items. <strong>No complex formulas</strong></li>\n\t\t\t\t\t<li>Export your route as TXT, JSON, or to <strong>LiveSplit</strong> [WIP]</li>\n\t\t\t\t</ul>\n\t\t\t</p>\n\t\t\t<h2>Getting Started</h2>\n\t\t\t<p>\n\t\t\t\tThe data structure of the tool is very intuitive: there are <strong>branches</strong>, <strong>splits</strong>, and <strong>actions</strong>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIf you are into speedrun. You already know what a split is. Branches are basically groups of splits.\n\t\t\t\tActions are what you do in the split that affects the resources you track.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tFor example, a typical section of the run could be like this:\n\t\t\t\t<ul>\n\t\t\t\t\t<li>Tutorial Levels</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tMain Area\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Dungeon A</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tDungeon B\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>Pick up 5 of Item 1</li>\n\t\t\t\t\t\t\t\t\t<li>Fight Monster X</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\tDungeon C\n\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t<li>Use 3 of Item 2</li>\n\t\t\t\t\t\t\t\t\t<li>Fight Monster Y</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>Final Boss</li>\n\t\t\t\t</ul>\n\t\t\t</p>\n\t\t\t<h2>Branch and Splits</h2>\n\t\t\t<p>\n\t\t\t\tYou can use the side panel to organize your branches and splits.\n\t\t\t\tUse the \"Edit\" button to enter editing mode, where you can move branches and splits, rename them, or delete them.\n\t\t\t\tWhen you click on a split, you will enter that split and can then edit the actions in the splits.\n\t\t\t</p>\n\n\t\t\t<h2>Items and Delta String</h2>\n\t\t\t<p>During the run, each action may affect the current resources the player possesses.\n\t\t\t\tThis tool is organized in the same way.</p>\n\t\t\t<p>\n\t\t\t\tEach action in a split has a <strong>delta string</strong> that is used to define the resources changes as a result of that action.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tTo define a delta string, you first must define the items. Follow the steps below to define an item:\n\t\t\t\t<ol>\n\t\t\t\t\t<li>Click on \"New Item\" under the \"Resources\" section</li>\n\t\t\t\t\t<li>Click on \"Edit\" next to \"Resources\"</li>\n\t\t\t\t\t<li>Enter the item name and press the \"R\" button next to the text box to rename the item</li>\n\t\t\t\t\t<li>Click on \"Finish\" to exit the editing mode</li>\n\t\t\t\t</ol>\n\t\t\t\tNow that you have defined your first item. It's time to write some delta strings.\n\t\t\t</p>\n\t\t\t<h2>Delta String Syntax</h2>\n\t\t\t<p>The basic syntax for the delta string is <code>[(item)](operator)(quantity)</code></p>\n\t\t\t<ol>\n\t\t\t\t<li><code>item</code>: The name of the item</li>\n\t\t\t\t<li><code>operator</code>: One of <code>+</code>, <code>-</code>, <code>=</code></li>\n\t\t\t\t<li><code>quantity</code>: How much to change</li>\n\t\t\t</ol>\n\t\t\t<p>For example, <code>[Apple]+5</code> means adding 5 apples to the resources during this action.\n\t\t\t(Given that <code>Apple</code> is defined in the Resources section)</p>\n\t\t\t<p>Similarly, <code>[Orange]-3</code> means subtracting 3 oranges, and <code>[Banana]=5</code> means setting the quantity of bananas to 5</p>\n\t\t\t<p>\n\t\t\t\tYou can also use reference to the quantity of another item.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tFor example, <code>[Rock]+[Wood]</code> means adding as many woods to rocks. If you have 5 woods and 8 rocks, you will now have 5 woods and 13 rocks.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe reference is done in parallel. So, <code>[Rock]=[Wood], [Wood]=[Rock]</code> will swap the quantities of woods and rocks.\n\t\t\t</p>\n\t\t\t<p>(Oh yeah, if you haven't already realize, use <code>,</code> to separate multiple items like the example above)</p>\n\t\t\t<h2>Track Resources</h2>\n\t\t\t<p>\n\t\t\t\tYou can use the Resources section to see all the resources defined.\n\t\t\t\tUse the filter text box to filter them.\n\t\t\t\tMultiple search word can be separated with comma (,). The search will give any item that contains any of the search words.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhen you click on an action. <strong>You are focused to that action. </strong> The Resources section will now also show how the items changed in during that action, as well as the quantity <strong>after</strong> the action is done.\n\t\t\t</p>\n\t\t\t<p>When your route gets longer. You may notice that the resource tracker takes time to finish calculating all the resources. When it's calculating, you can continue editing the route. However, the tracking result may not be accurate when it's not done calculating. Especially if it is something you just edited.</p>\n\t\t\t<h2>FAQ</h2>\n\t\t\t<p>I will put whatever questions people ask me here.</p>\n\t\t\t<p><strong>Q: Why are some buttons disabled?</strong></p>\n\t\t\t<p>A: I didn't finish implementing them</p>\n\t\t\t<h2>Other</h2>\n\t\t\t<p>Source on <a href=\"https://github.com/resource-routing/resource-routing.github.io\">Github</a></p>\n\t\t</div>\n\t</Box>\n\t;\n\nexport default Help;","import React from \"react\";\nimport \"./App.css\";\nimport SideNav from \"sections/SideNav\";\nimport Header from \"sections/Header\";\nimport Footer from \"sections/Footer\";\nimport Actions from \"sections/Actions\";\nimport Box from \"components/Box\";\nimport {\n\tgetActionsBounds,\n\tgetFooterBounds,\n\tgetHeaderBounds,\n\tgetResourcesBounds,\n\tgetSideBounds,\n\tisShowingHelp,\n} from \"store/application/selectors\";\nimport {\n\tsetWindowWidth,\n\tdoLayout,\n\tsetInfo,\n\tmarkResourceDirtyAt,\n} from \"store/application/actions\";\nimport {\n\tsetRouteState,\n} from \"store/routing/actions\";\nimport { setSettingState } from \"store/setting/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"@reduxjs/toolkit\";\nimport Alert from \"dialog/Alert\";\nimport Items from \"sections/Items\";\nimport { startResourceCalcClock, stopResourceCalcClock } from \"data/resource\";\nimport { loadfromLocalStorage } from \"data/storage\";\nimport { ReduxGlobalState } from \"store/store\";\nimport { startAutoSaveClock, stopAutoSaveClock } from \"data/autosave\";\nimport IODialog from \"dialog/IODialog\";\nimport Help from \"sections/Help\";\n\nconst mapStateToProps = (state: ReduxGlobalState) => ({\n\theaderBounds: getHeaderBounds(state),\n\tsideBounds: getSideBounds(state),\n\tactionsBounds: getActionsBounds(state),\n\tfooterBounds: getFooterBounds(state),\n\tresourcesBounds: getResourcesBounds(state),\n\tshowHelp: isShowingHelp(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n\tactions: bindActionCreators({\n\t\tsetWindowWidth,\n\t\tdoLayout,\n\t\tsetRouteState,\n\t\tsetInfo,\n\t\tsetSettingState,\n\t\tmarkResourceDirtyAt,\n\t}, dispatch)\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\ntype State = {\n\talertContent?: React.ReactNode,\n\talertActions: AlertOption[],\n\tshowIOAlert: boolean,\n}\n\nexport type AlertOption = {\n\tname: string,\n\texecute?: () => void\n}\nexport type AppAction = {\n\tshowAlert: (content?: React.ReactNode, actions?: AlertOption[]) => void,\n\tshowIODialog: (show?: boolean) => void,\n}\n\nclass App extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\talertContent: undefined,\n\t\t\talertActions: [],\n\t\t\tshowIOAlert: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"resize\", this.redoLayout.bind(this));\n\t\tthis.props.actions.doLayout();\n\t\tconst [storedState, settings] = loadfromLocalStorage();\n\t\tif (storedState) {\n\t\t\tthis.props.actions.setRouteState({ routeState: storedState });\n\t\t\tthis.props.actions.markResourceDirtyAt({ globalIndex: 0 });\n\t\t\tthis.props.actions.setInfo({ info: \"Loaded from local storage\" });\n\t\t} else {\n\t\t\tthis.props.actions.setInfo({ info: \"Failed to load from local storage. Loaded empty project.\" });\n\t\t}\n\t\tif (settings) {\n\t\t\tthis.props.actions.setSettingState({ settingState: settings });\n\t\t}\n\t\tstartResourceCalcClock();\n\t\tstartAutoSaveClock();\n\t}\n\n\tredoLayout() {\n\t\tthis.props.actions.setWindowWidth({ width: window.innerWidth });\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this.redoLayout.bind(this));\n\t\tstopResourceCalcClock();\n\t\tstopAutoSaveClock();\n\t}\n\n\tshowAlert(content: React.ReactNode = undefined, actions: AlertOption[] = [{ name: \"OK\" }]): void {\n\t\tthis.setState({\n\t\t\talertContent: content,\n\t\t\talertActions: actions,\n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst appActions: AppAction = {\n\t\t\tshowAlert: this.showAlert.bind(this),\n\t\t\tshowIODialog: (show = true) => this.setState({ showIOAlert: show }),\n\t\t};\n\n\t\tconst {\n\t\t\theaderBounds,\n\t\t\tsideBounds,\n\t\t\tactionsBounds,\n\t\t\tfooterBounds,\n\t\t\tresourcesBounds,\n\t\t\tshowHelp,\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<div style={{\n\t\t\t\twidth: \"100vw\",\n\t\t\t\theight: \"100vh\"\n\t\t\t}}>\n\t\t\t\t<Box layout={headerBounds} borderClass=\"border overflow-hidden\">\n\t\t\t\t\t<Header appActions={appActions} />\n\t\t\t\t</Box>\n\t\t\t\t<Box layout={sideBounds} borderClass=\"border\">\n\t\t\t\t\t<SideNav appActions={appActions} />\n\t\t\t\t</Box>\n\t\t\t\t<Box layout={footerBounds} borderClass=\"border\">\n\t\t\t\t\t<Footer />\n\t\t\t\t</Box>\n\t\t\t\t<Box layout={actionsBounds} borderClass=\"border overflow\">\n\t\t\t\t\t{\n\t\t\t\t\t\tshowHelp ? <Help /> : <Actions appActions={appActions} />\n\t\t\t\t\t}\n\n\t\t\t\t</Box>\n\t\t\t\t<Box layout={resourcesBounds} borderClass=\"border\">\n\t\t\t\t\t<Items appActions={appActions} />\n\t\t\t\t</Box>\n\n\t\t\t\t<Alert content={this.state.alertContent} alertActions={this.state.alertActions} actions={{\n\t\t\t\t\thideAlert: () => this.showAlert()\n\t\t\t\t}} />\n\t\t\t\t<Alert content={this.state.showIOAlert ? <IODialog appActions={appActions} /> : undefined} alertActions={[{ name: \"Close\" }]} actions={{\n\t\t\t\t\thideAlert: () => this.setState({ showIOAlert: false })\n\t\t\t\t}} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}